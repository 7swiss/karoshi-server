#!/bin/bash
#Copyright (C) 2007  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/groups_change_cgi
then
echo `date`: groups_change - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/groups_change_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/groups_change.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $groups_change_cgi'check' ]
then
echo `date`: groups_change - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/groups_change_cgi
then
echo `date`: groups_change - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/groups_change_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/groups_change.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $groups_change_cgi'check' ]
then
echo `date`: groups_change - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 1 ]
then
echo `date`: groups_change - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo $* | cut -s -d: -f1`
REMOTE_ADDR=`echo $* | cut -s -d: -f2`
REMOTE_MD5=`echo $* | cut -s -d: -f3`
USERNAME=`echo $* | cut -s -d: -f4`
CHOSENGROUPS=`echo $* | cut -s -d: -f5`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: groups_change - Not called by groups_change.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: groups_change - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: groups_change - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $USERNAME'null' = null ]
then
echo `date`: groups_change - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $CHOSENGROUPS'null' = null ]
then
echo `date`: groups_change - No groups chosen by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: groups_change - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Change the secondary groups for the user
########################
echo groups_change - $USERNAME is now a member of "$CHOSENGROUPS" >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo `date`: groups_change - modifying groups "for" $USERNAME from $REMOTE_ADDR by $REMOTE_USER >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
smbldap-usermod -G "$CHOSENGROUPS" $USERNAME 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
GROUPS_CHANGE_STATUS=`echo $?`

#Change groups on federated servers
if [ -d /opt/karoshi/server_network/federated_ldap_servers ]
then
if [ `ls -1 /opt/karoshi/server_network/federated_ldap_servers/ | wc -l` -gt 0 ]
then
for FEDERATED_SERVERS in /opt/karoshi/server_network/federated_ldap_servers/*
do
FEDERATED_SERVER=`basename $FEDERATED_SERVERS`
ssh -x -o PasswordAuthentication=no -o ConnectTimeout=3 root@$FEDERATED_SERVER '
echo groups_change \(federated mode\) '$USERNAME' is now a member of "'$CHOSENGROUPS'" >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
echo `date`: groups_change \(federated mode\) - modifying groups "for" '$USERNAME' from '$REMOTE_ADDR' by '$REMOTE_USER' >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
smbldap-usermod -G "'$CHOSENGROUPS'" '$USERNAME'
'
done
fi
fi
exit $GROUPS_CHANGE_STATUS

