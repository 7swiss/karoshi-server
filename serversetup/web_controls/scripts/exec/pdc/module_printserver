#!/bin/bash
#Copyright (C) 2010 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_printserver_cgi
then
echo `date`: module_printserver - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_printserver_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_printserver.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $module_printserver_cgi'check' ]
then
echo `date`: module_printserver - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: module_printserver - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-'`
if [ $DATA'null' = null ]
then
echo `date`: module_printserver - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: module_printserver - Not called by module_printserver.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: module_printserver - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: module_printserver - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $SERVERNAME'null' = null ]
then
echo `date`: module_printserver - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

echo `date`: module_printserver - Setting up $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE


[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/serversetup/language/$LANGCHOICE/modules/printserver/setupprintserver ] || LANGCHOICE=englishuk
source /opt/karoshi/serversetup/language/$LANGCHOICE/modules/printserver/setupprintserver
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all

if [ $SERVERNAME != $HOSTNAME ]
then
#Copy in language files
scp -p -r /opt/karoshi/serversetup/language/$LANGCHOICE/modules/printserver root@$SERVERNAME:/opt/karoshi/serversetup/language/$LANGCHOICE/modules/ 1> /dev/null
#Copy in module
scp -p -r /opt/karoshi/serversetup/modules/printserver root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null
fi
##########################
#Configure ldap
##########################

CONFIGURE_LDAP=yes
if [ $SERVERNAME = $HOSTNAME ]
then
CONFIGURE_LDAP=no
fi
if [ -f /opt/karoshi/server_network/slave_ldap_servers/$SERVERNAME ]
then
CONFIGURE_LDAP=no
fi
if [ -f /opt/karoshi/server_network/ldap_clients/$SERVERNAME ]
then
CONFIGURE_LDAP=no
fi

#########################
#Ldap user check
#########################
if [ $SERVERNAME != $HOSTNAME ] && [ $CONFIGURE_LDAP != yes ]
then
PDCUSERCOUNT=`getent passwd | grep -c :/home/users/`

SERVERUSERCOUNT=`ssh -x -o PasswordAuthentication=no $SERVERNAME '
getent passwd | grep -c :/home/users/
'
`
[ $PDCUSERCOUNT != $SERVERUSERCOUNT ] && CONFIGURE_LDAP=yes
fi

if [ $CONFIGURE_LDAP = yes ]
then
PDCIP=`net lookup $HOSTNAME`
ssh -x -o PasswordAuthentication=no $SERVERNAME '
echo "'$REMOTE_USER':'$REMOTE_ADDR':'$MD5SUM':'$HOSTNAME':'$PDCIP':" | /opt/karoshi/serversetup/modules/ldap/configureldap 
'
#Copy in /etc/ldap.secret
scp -p /etc/ldap.secret root@$SERVERNAME:/etc/ 1> /dev/null
fi

#########################
#Run module
#########################
if [ ! -f /opt/karoshi/server_network/domain_information/domain_name ]
then
#Get samba domain
SAMBADOMAIN=`cat /etc/samba/smb.conf | grep workgroup | sed -n 1,1p | sed 's/ //g' | cut -d'=' -f2`
echo SAMBADOMAIN="$SAMBADOMAIN" > /opt/karoshi/server_network/domain_information/domain_name
fi
source /opt/karoshi/server_network/domain_information/domain_name

PDCIP=`net lookup $HOSTNAME`
if [ $SERVERNAME != $HOSTNAME ]
then

#Make sure karoshiadmin user exists
getent passwd karoshiadmin 1>/dev/null
if [ `echo $?` != 0 ]
then
#Create karoshiadmin user and add to itadmin
PRIMARYGROUPID=`getent group | grep -w ^itadmin | cut -d: -f3 | sed -n 1,1p`
[ $PRIMARYGROUPID'null' = null ] && exit 101
karoshildap-useradd -a -g $PRIMARYGROUPID -G "Domain Admins" -d /home/users/itadminstaff/karoshiadmin -c karoshiadmin -N add -S client karoshiadmin 1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE

#Move user to the correct sub organisation unit
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
#Create ldif for new user
[ -f /opt/karoshi/.tempdata/karoshiadmin.$$.ldif ] && rm -f /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
touch /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
chmod 0600 /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
ldapsearch -x -w $LDAPPASS -D "cn=admin,dc=karoshi,dc=local" uid=karoshiadmin > /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
#Modify ldif file with correct sub organisation unit
sed -i 's/ou=People,dc=karoshi,dc=local/ou=itadmin,ou=personnel,ou=People,dc=karoshi,dc=local/g' /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
#Delete user entry from the top organisation unit
ldapdelete -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS uid=karoshiadmin,ou=People,dc=karoshi,dc=local
#Import user ldif file to correct sub organisation unit
ldapadd -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS -f /opt/karoshi/.tempdata/karoshiadmin.$$.ldif 1>/dev/null 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi

#Generate random password for karoshiadmin user
PASSCHOICE=( A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y x 1 2 3 4 5 6 7 8 9 0 )

RANGE=`echo ${#PASSCHOICE[@]}`
let RANGE=$RANGE-1 

COUNTER=1
while [ $COUNTER -le 16 ]
do
ARRAYCHOICE=$RANDOM
let "ARRAYCHOICE %= $RANGE"
RANDPASSWORD[$COUNTER]=`echo ${PASSCHOICE[$ARRAYCHOICE]} `
let COUNTER=COUNTER+1
done
PASSWORD=`echo ${RANDPASSWORD[@]:0} | sed 's/ //g'`

#Change karoshiadmin password 
echo -e "$PASSWORD""\n""$PASSWORD" | smbldap-passwd karoshiadmin 1>/dev/null 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

#allow karoshiadmin to join clients to the domain
echo `date`: module_printserver - allowing karoshiadmin to "join" clients to the domain by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

net rpc rights grant -U karoshiadmin%$PASSWORD "$SAMBADOMAIN\Domain Admins" SeMachineAccountPrivilege \
SePrintOperatorPrivilege SeAddUsersPrivilege SeDiskOperatorPrivilege SeRemoteShutdownPrivilege 1>/dev/null

ssh -x -o PasswordAuthentication=no $SERVERNAME '
echo '$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$PASSWORD:$HOSTNAME:$PDCIP:$SAMBADOMAIN:' | /opt/karoshi/serversetup/modules/printserver/setupprintserver
'
[ `echo $?` = 101 ] && exit 101
else
echo $REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$PASSWORD:$HOSTNAME:$PDCIP:$SAMBADOMAIN: | /opt/karoshi/serversetup/modules/printserver/setupprintserver
[ `echo $?` = 101 ] && exit 101
fi

####################
#Set printing to correct server
####################
#Modifying logonform.kix for correct server

KIXLINENUMBER=`grep -n printserver= /var/lib/samba/netlogon/logonform.kix | cut -d: -f1`

[ $KIXLINENUMBER'null' != null ] && sed -i $KIXLINENUMBER'c''$printserver'=$SERVERNAME /var/lib/samba/netlogon/logonform.kix

#Modifying newlogonform.kix for correct server

KIXLINENUMBER=`grep -n printserver= /var/lib/samba/netlogon/newlogonform.kix | cut -d: -f1`

[ $KIXLINENUMBER'null' != null ] && sed -i $KIXLINENUMBER'c''$printserver'=$SERVERNAME /var/lib/samba/netlogon/newlogonform.kix

#Add role information
[ ! -d /opt/karoshi/server_network/servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/servers/$SERVERNAME
[ -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role ] && rm -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role
echo $ROLE"<br>" > /opt/karoshi/server_network/servers/$SERVERNAME/printserver
[ ! -d /var/lib/samba/netlogon/domain_information ] && mkdir -p /var/lib/samba/netlogon/domain_information
echo $SERVERNAME > /var/lib/samba/netlogon/domain_information/print_server
echo $SERVERNAME > /opt/karoshi/server_network/print_server
cp -f /opt/karoshi/server_network/printserver /var/lib/samba/netlogon/
sed -i 's/PRINTERCTRL=no/PRINTERCTRL=yes/g' /opt/karoshi/server_network/menusettings

########################
#Printer Accounting
########################
if [ -f /opt/karoshi/server_network/printserver ]
then
USE_EMAIL=no
PRINTSERVER=`sed -n 1,1p /opt/karoshi/server_network/printserver`
if [ -f /opt/karoshi/server_network/emailserver ]
then
EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`
EMAILSERVERTCPIP=`grep $EMAILSERVER /etc/hosts | sed -n 1,1p | cut -f1`  
EMAILDOMAIN=`sed -n 1,1p /opt/karoshi/server_network/emaildomain`
USE_EMAIL=yes
fi


#Create default quota limits

#Create quota folder
if [ ! -d /opt/karoshi/server_network/printer_accounting/quotas ]
then
mkdir -p /opt/karoshi/server_network/printer_accounting/quotas
chown lp.sys /opt/karoshi/server_network/printer_accounting/quotas
chmod 0770 /opt/karoshi/server_network/printer_accounting/quotas
fi

[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/print_quota ] && echo 400 > /opt/karoshi/server_network/printer_accounting/quotas/print_quota

COUNTER=2002
ENDYEAR=2050
while [ $COUNTER -le $ENDYEAR ]
do
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/yr$COUNTER"_"group_quota ] && echo 200 > /opt/karoshi/server_network/printer_accounting/quotas/yr$COUNTER"_"group_quota
let COUNTER=$COUNTER+1
done

[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/itadmin_group_quota ] && echo 3000 > /opt/karoshi/server_network/printer_accounting/quotas/itadmin_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff_group_quota ] && echo 500 > /opt/karoshi/server_network/printer_accounting/quotas/staff_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff2_group_quota ] && echo 500 > /opt/karoshi/server_network/printer_accounting/quotas/staff2_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff3_group_quota ] && echo 500 > /opt/karoshi/server_network/printer_accounting/quotas/staff3_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff4_group_quota ] && echo 500 > /opt/karoshi/server_network/printer_accounting/quotas/staff4_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/officestaff_group_quota ] && echo 500 > /opt/karoshi/server_network/printer_accounting/quotas/officestaff_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/tech_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/tech_group_quota


if [ $PRINTSERVER = $HOSTNAME ]
then

cp -f "/opt/karoshi/serversetup/modules/printserver/printer_info" /opt/karoshi/"useful scripts/"

#Need to have perl libnet-snmp-perl and snmp installed
UPDATEAPT=yes
which snmpkey 1>/dev/null
if [ `echo $?` != 0 ]
then
if [ $UPDATEAPT = yes ]
then
apt-get update
UPDATEAPT=no
fi
apt-get install -y libnet-snmp-perl
fi


which snmpget 1>/dev/null
if [ `echo $?` != 0 ]
then
if [ $UPDATEAPT = yes ]
then
apt-get update
UPDATEAPT=no
fi
apt-get install -y snmp
fi

#Copy quosnmp
[ ! -d /etc/quosnmp ] && mkdir -p /etc/quosnmp
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/bin/quosnmp /usr/lib/cups/backend
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/bin/quosnmp-util /usr/local/sbin
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/lib/Quosnmp.pm /usr/share/perl5/
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/etc/quosnmp.conf /etc/quosnmp

chown root:root /usr/lib/cups/backend/quosnmp
chmod 700 /usr/lib/cups/backend/quosnmp

#Create accounting log folder
if [ ! -d /opt/karoshi/server_network/printer_accounting/accounting ]
then
mkdir -p /opt/karoshi/server_network/printer_accounting/accounting
chown lp.sys /opt/karoshi/server_network/printer_accounting/accounting
chmod 0770 /opt/karoshi/server_network/printer_accounting/accounting
fi

source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_stop
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start

#Enable e-mail notifications for over quota users
if [ $USE_EMAIL = yes ]
then
sed -i "s/CHANGE_THIS_SMTP_SERVER/$EMAILSERVERTCPIP/g" /etc/quosnmp/quosnmp.conf
sed -i "s/OVER_QUOTA_NOTIFY = 0/OVER_QUOTA_NOTIFY = 2/g" /etc/quosnmp/quosnmp.conf
if [ `grep -c ^"[EMAIL_LIST]" /etc/quosnmp/quosnmp.conf` = 0 ]
then
echo "[EMAIL_LIST]" >> /etc/quosnmp/quosnmp.conf
echo "*":$EMAILDOMAIN >> /etc/quosnmp/quosnmp.conf
fi
fi

#Schedule printer_accounting
echo 0 1 "*" "*" "*" /opt/karoshi/serversetup/modules/printserver/printer_accounting > /opt/karoshi/cronjobs/jobs/printer_accounting.cron
#######################
#Refresh cronjobs
#######################
/opt/karoshi/serversetup/all/"useful scripts"/refreshcronjobs 1>/dev/null

else
scp -r /opt/karoshi/serversetup/modules/printserver/ root@$PRINTSERVER:"/opt/karoshi/serversetup/modules/"
scp "/opt/karoshi/serversetup/modules/printserver/printer_info" root@$PRINTSERVER:"/opt/karoshi/useful\ scripts/"
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $PRINTSERVER '
#Need to have perl libnet-snmp-perl and snmp installed
UPDATEAPT=yes
which snmpkey 1>/dev/null
if [ `echo $?` != 0 ]
then
if [ $UPDATEAPT = yes ]
then
apt-get update
UPDATEAPT=no
fi
apt-get install -y libnet-snmp-perl
fi


which snmpget 1>/dev/null
if [ `echo $?` != 0 ]
then
if [ $UPDATEAPT = yes ]
then
apt-get update
UPDATEAPT=no
fi
apt-get install -y snmp
fi

#Copy quosnmp
[ ! -d /etc/quosnmp ] && mkdir -p /etc/quosnmp
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/bin/quosnmp /usr/lib/cups/backend
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/bin/quosnmp-util /usr/local/sbin
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/lib/Quosnmp.pm /usr/lib/perl/site_perl
cp -f /opt/karoshi/serversetup/modules/printserver/quosnmp/etc/quosnmp.conf /etc/quosnmp

chown root:root /usr/lib/cups/backend/quosnmp
chmod 700 /usr/lib/cups/backend/quosnmp

#Create quota folder
if [ ! -d /opt/karoshi/server_network/printer_accounting/quotas ]
then
mkdir -p /opt/karoshi/server_network/printer_accounting/quotas
chown lp.sys /opt/karoshi/server_network/printer_accounting/quotas
chmod 0770 /opt/karoshi/server_network/printer_accounting/quotas
fi

#Create default quota limits
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/print_quota ] && echo 200 > /opt/karoshi/server_network/printer_accounting/quotas/print_quota

COUNTER=2002
ENDYEAR=2050
while [ $COUNTER -le $ENDYEAR ]
do
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/yr$COUNTER"_"group_quota ] && echo 100 > /opt/karoshi/server_network/printer_accounting/quotas/yr$COUNTER"_"group_quota
let COUNTER=$COUNTER+1
done

[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/itadmin_group_quota ] && echo 3000 > /opt/karoshi/server_network/printer_accounting/quotas/itadmin_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/staff_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff2_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/staff2_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff3_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/staff3_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/staff4_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/staff4_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/officestaff_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/officestaff_group_quota
[ ! -f /opt/karoshi/server_network/printer_accounting/quotas/tech_group_quota ] && echo 300 > /opt/karoshi/server_network/printer_accounting/quotas/tech_group_quota

#Create accounting log folder
if [ ! -d /opt/karoshi/server_network/printer_accounting/accounting ]
then
mkdir -p /opt/karoshi/server_network/printer_accounting/accounting
chown lp.sys /opt/karoshi/server_network/printer_accounting/accounting
chmod 0770 /opt/karoshi/server_network/printer_accounting/accounting
fi

if [ '$USE_EMAIL' = yes ]
then
sed -i "s/CHANGE_THIS_SMTP_SERVER/'$EMAILSERVERTCPIP'/g" /etc/quosnmp/quosnmp.conf
sed -i "s/OVER_QUOTA_NOTIFY = 0/OVER_QUOTA_NOTIFY = 2/g" /etc/quosnmp/quosnmp.conf
if [ `grep -c ^"[EMAIL_LIST]" /etc/quosnmp/quosnmp.conf` = 0 ]
then
echo ^"[EMAIL_LIST]" >> /etc/quosnmp/quosnmp.conf
echo "*":'$EMAILDOMAIN' >> /etc/quosnmp/quosnmp.conf
fi
fi

#Schedule printer_accounting
echo 0 1 "*" "*" "*" /opt/karoshi/serversetup/modules/printserver/printer_accounting > /opt/karoshi/cronjobs/jobs/printer_accounting.cron
#######################
#Refresh cronjobs
#######################
/opt/karoshi/serversetup/all/"useful scripts"/refreshcronjobs 1>/dev/null

source /opt/karoshi/serversetup/variables/distro
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_stop
sleep 1
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/cups_start
'
fi
fi

#restrict anonymous = 2 needs adding to /etc/samba/smb.conf global section
# printers section	guest ok = No

#Create printer_drivers folder for linux clients
[ ! -d /var/lib/samba/netlogon/linuxclient/printer_drivers/ ] && mkdir -p /var/lib/samba/netlogon/linuxclient/printer_drivers/
exit

