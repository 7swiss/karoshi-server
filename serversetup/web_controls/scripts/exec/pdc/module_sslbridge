#!/bin/bash
#Copyright (C) 2007 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_sslbridge_cgi
then
echo `date`: module_sslbridge - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_sslbridge_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_sslbridge.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set

if [ $MD5SUM'check' != $module_sslbridge_cgi'check' ]
then
echo `date`: module_sslbridge - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: module_sslbridge - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-%'`
if [ $DATA'null' = null ]
then
echo `date`: module_sslbridge - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: module_sslbridge - Not called by module_sslbridge.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: module_sslbridge - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: module_sslbridge - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: module_sslbridge - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
echo `date`: setupsslbridge by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/modules/moodle/setupmoodle ] || LANGCHOICE=englishuk
source /opt/karoshi/serversetup/language/$LANGCHOICE/modules/moodle/setupmoodle
############################
#Get server to install sslbridge on
############################
SSLBRIDGESERVER=xen
if [ -f /opt/karoshi/serversetup/variables/ssh/oracssh ]
then
SSLBRIDGESERVER=orac
fi
if [ -f /opt/karoshi/serversetup/variables/ssh/joshuassh ]
then
SSLBRIDGESERVER=joshua
fi
if [ -f /opt/karoshi/serversetup/variables/ssh/skynetssh ]
then
SSLBRIDGESERVER=skynet
fi

source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/software
source /opt/karoshi/serversetup/variables/tcpip
if [ $SSLBRIDGESERVER = xen ]
then
#Install sslbridge
/opt/karoshi/serversetup/modules/sslbridge/setup_sslbridge
fi

if [ $SSLBRIDGESERVER != xen ]
then
ssh -x -o PasswordAuthentication=no $SSLBRIDGESERVER '

[ ! -d /opt/karoshi/serversetup/language/$LANGCHOICE/modules ] && mkdir -p /opt/karoshi/serversetup/language/'$LANGCHOICE'/modules
[ ! -d /opt/karoshi/serversetup/modules/ ] && mkdir -p /opt/karoshi/serversetup/modules/
'

#Copy in language files
scp -p -r /opt/karoshi/serversetup/language/$LANGCHOICE/modules/sslbridge root@$SSLBRIDGESERVER:/opt/karoshi/serversetup/language/$LANGCHOICE/modules/ 1> /dev/null
#Copy in module
scp -p -r /opt/karoshi/serversetup/modules/sslbridge root@$SSLBRIDGESERVER:/opt/karoshi/serversetup/modules/ 1> /dev/null
#Install sslbridge
ssh -x -o PasswordAuthentication=no $SSLBRIDGESERVER '
/opt/karoshi/serversetup/modules/sslbridge/setup_sslbridge
'
fi
#Create completed info file
[ ! -d /opt/karoshi/modules/sslbridge ] && mkdir -p /opt/karoshi/modules/sslbridge
echo '<a href="http://www.sslbridge.com/" target="_blank"><img style="border: 0px solid ;" alt="" src="/images/help/info.png"></a>' > /opt/karoshi/modules/sslbridge/weblink
echo '<b>'Server'</b>': $SSLBRIDGESERVER > /opt/karoshi/modules/sslbridge/installed_information
echo '<b>'Access'</b>': '<a href="https://'$SSLBRIDGESERVER':20000" target="_blank">https://'$SSLBRIDGESERVER':20000</a>' >> /opt/karoshi/modules/sslbridge/installed_information

exit
