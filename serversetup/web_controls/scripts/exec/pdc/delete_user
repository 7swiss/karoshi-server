#!/bin/bash
#Copyright (C) 2007  The karoshi Team
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/delete_user_cgi
then
echo `date`: delete_user - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/delete_user_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/delete_user.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $delete_user_cgi'check' ]
then
echo `date`: delete_user - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: delete_user - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n\-+'`
if [ $DATA'null' = null ]
then
echo `date`: delete_user - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
DELETEUSER=`echo "$DATA" | cut -s -d: -f4`
DOMAINPASSWORD=`echo "$DATA" | cut -s -d: -f5`
REQUESTFILE=`echo "$DATA" | cut -s -d: -f6`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: delete_user - Not called by delete_user.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: delete_user - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: delete_user - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ]
then
echo `date`: delete_user - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

#Check for slave ldap servers
SLAVE_LDAP_SERVERS=no
if [ -d /opt/karoshi/server_network/slave_ldap_servers/ ]
then
if [ `ls -1 /opt/karoshi/server_network/slave_ldap_servers/ | wc -l` -gt 0 ]
then
SLAVE_LDAP_SERVERS=yes
fi
fi

#Check for federated ldap servers
FEDERATED_LDAP_SERVERS=no
if [ -d /opt/karoshi/server_network/federated_ldap_servers/ ]
then
if [ `ls -1 /opt/karoshi/server_network/federated_ldap_servers/ | wc -l` -gt 0 ]
then
FEDERATED_LDAP_SERVERS=yes
fi
fi

#######################
#Get data on user
#######################
PRIMARYGROUP=`id -G -n $DELETEUSER | cut -d' ' -f1`
if [ ! -f /opt/karoshi/server_network/group_information/$PRIMARYGROUP ]
then
echo `date`: delete_user - no primary group information 'for' $PRIMARYGROUP by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

source /opt/karoshi/server_network/group_information/$PRIMARYGROUP
echo `date`: delete_user - deleting $DELETEUSER from $REMOTE_ADDR by $REMOTE_USER >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

#######################
#Check all servers are up before deleting the user
#######################
#Check slave ldap servers
if [ $SLAVE_LDAP_SERVERS = yes ]
then
for SLAVELDAPSERVERS in /opt/karoshi/server_network/slave_ldap_servers/*
do
SLAVELDAPSERVER=`basename $SLAVELDAPSERVERS`
SSHSTATUS=0
ssh -o PasswordAuthentication=no -o ConnectTimeout=2 $SLAVELDAPSERVER ls 1>/dev/null
SSHSTATUS=`echo $?`
if [ $SSHSTATUS != 0 ]
then
echo `date`: delete_user - user not deleted due to ssh failure on $SLAVELDAPSERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 105
fi
done
fi

#Check federated servers
if [ $FEDERATED_LDAP_SERVERS = yes ]
then
for FEDERATEDLDAPSERVERS in /opt/karoshi/server_network/federated_ldap_servers/*
do
FEDERATEDLDAPSERVER=`basename $FEDERATEDLDAPSERVERS`
SSHSTATUS=0
ssh -o PasswordAuthentication=no -o ConnectTimeout=2  $FEDERATEDLDAPSERVER '
#Check to see if the users home area should be on a separate file server in this area.
source /opt/karoshi/server_network/group_information/'$PRIMARYGROUP'
if [ -d /opt/karoshi/server_network/servers/$SERVER ] && [ $SERVER != $HOSTNAME ]
then
ssh -x -o PasswordAuthentication=no -o ConnectTimeout=2 $SERVER ls 1>/dev/null
SSHSTATUS=`echo $?`
if [ $SSHSTATUS != 0 ]
then
exit 106
fi
fi
'
SSHSTATUS=`echo $?`
if [ $SSHSTATUS != 0 ]
then
if [ $SSHSTATUS = 106 ]
then
echo `date`: delete_user - user not deleted due to ssh failure on a file server connected from $FEDERATEDLDAPSERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 105
else
echo `date`: delete_user - user not deleted due to ssh failure on $FEDERATEDLDAPSERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 105
fi
fi
done
fi

#Check file server is up for user's home area
if [ -d /opt/karoshi/server_network/servers/$SERVER ] && [ $SERVER != $HOSTNAME ]
then
ssh -o PasswordAuthentication=no -o ConnectTimeout=2 -o ConnectTimeout=2 $SERVER ls 1>/dev/null
SSHSTATUS=`echo $?`
if [ $SSHSTATUS != 0 ]
then
echo `date`: delete_user - user not created due to ssh failure on $SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 105
fi
fi

#######################
#Delete user image
#######################
[ -f /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/$DELETEUSER.jpg ] && rm -f /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/$DELETEUSER.jpg
#######################
#Delete the user account
#######################
smbldap-userdel $DELETEUSER 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
DELETE_USER_STATUS=`echo $?`
if [ -d /home/applications/profiles/$DELETEUSER ]
then
#Delete profile if using a roaming profile
rm -d -R -f /home/applications/profiles/$DELETEUSER
rm -f /home/applications/profiles/$DELETEUSER.V2
smbldap-groupdel $DELETEUSER 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ `grep -w -c $DELETEUSER /opt/karoshi/server_network/windows_roaming_profile_users` -gt 0 ]
then
LINENUMBER=`grep -w -n ^$DELETEUSER /opt/karoshi/server_network/windows_roaming_profile_users | cut -d: -f1`
#remove username
sed -i $LINENUMBER'd' /opt/karoshi/server_network/windows_roaming_profile_users
#Delete empty lines
sed -i '/^$/d' /opt/karoshi/server_network/windows_roaming_profile_users
fi
fi
#Delete logon script
[ -f /var/lib/samba/netlogon/windows_settings/drives/$DELETEUSER.kix ] && rm -f /var/lib/samba/netlogon/windows_settings/drives/$DELETEUSER.kix
#Delete security settings
[ -f /var/lib/samba/netlogon/windows_settings/security/$DELETEUSER.kix ] && rm -f /var/lib/samba/netlogon/windows_settings/security/$DELETEUSER.kix
#Delete home folder
[ -d $HOMEPATH/$DELETEUSER ] && rm -f -R $HOMEPATH/$DELETEUSER
#Delete inbox
[ -f /var/spool/mail/$DELETEUSER ] && rm -f /var/spool/mail/$DELETEUSER
#Delete group information
[ -f /opt/karoshi/server_network/group_information/$DELETEUSER ] && rm -f /opt/karoshi/server_network/group_information/$DELETEUSER
#Rebuild primarygroups.txt - this file is to allow for windows 7 logins where the primary group feature is broken
[ -f /var/lib/samba/netlogon/primarygroups.txt ] && rm -f /var/lib/samba/netlogon/primarygroups.txt
for USERDETAILS in `getent passwd | grep /home/users/`
do
KAROSHIUSER=`echo $USERDETAILS | cut -d: -f1 | sed 's/,//g'`
PRIGROUP=`id -g -n $KAROSHIUSER`
echo $KAROSHIUSER,$PRIGROUP >> /var/lib/samba/netlogon/primarygroups.txt
done

#######################
#Delete the folder on extra file server
#######################
if [ -d /opt/karoshi/server_network/servers/$SERVER ] && [ $SERVER != $HOSTNAME ]
then
ssh -x -o PasswordAuthentication=no $SERVER 'rm -f -R '$HOMEPATH''/''$DELETEUSER'' 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi

#######################
#Delete the account on any slave ldap servers
#######################

if [ $SLAVE_LDAP_SERVERS = yes ]
then
for SLAVELDAPSERVERS in /opt/karoshi/server_network/slave_ldap_servers/*
do
SLAVELDAPSERVER=`basename $SLAVELDAPSERVERS`
echo `date`: delete_user - deleting $DELETEUSER on $SLAVELDAPSERVER from $REMOTE_ADDR by $REMOTE_USER >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
ssh -x -o PasswordAuthentication=no $SLAVELDAPSERVER '
smbldap-userdel -r '$DELETEUSER'
#Delete home folder
[ -d '$HOMEPATH''/''$DELETEUSER' ] && rm -f -R '$HOMEPATH''/''$DELETEUSER'
#Delete inbox
[ -f /var/spool/mail/'$DELETEUSER' ] && rm -f /var/spool/mail/'$DELETEUSER'
' 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
done
fi

#######################
#Delete the account on any federated ldap servers
#######################

if [ $FEDERATED_LDAP_SERVERS = yes ]
then
for FEDERATEDLDAPSERVERS in /opt/karoshi/server_network/federated_ldap_servers/*
do
FEDERATEDLDAPSERVER=`basename $FEDERATEDLDAPSERVERS`
echo `date`: delete_user \(federated mode\) - deleting $DELETEUSER on $FEDERATEDLDAPSERVER from $REMOTE_ADDR by $REMOTE_USER >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
ssh -x -o PasswordAuthentication=no $FEDERATEDLDAPSERVER '
if [ -d /home/applications/profiles/'$DELETEUSER' ]
then
#Delete profile if using a roaming profile
rm -d -R -f /home/applications/profiles/'$DELETEUSER'
smbldap-groupdel '$DELETEUSER' 1>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE' 2>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
if [ `grep -w -c '$DELETEUSER' /opt/karoshi/server_network/windows_roaming_profile_users` -gt 0 ]
then
LINENUMBER=`grep -w -n ^'$DELETEUSER' /opt/karoshi/server_network/windows_roaming_profile_users | cut -d: -f1`
#remove username
sed -i $LINENUMBER"d" /opt/karoshi/server_network/windows_roaming_profile_users
#Delete empty lines
sed -i "/^$/d" /opt/karoshi/server_network/windows_roaming_profile_users
fi
fi
#Delete home folder from file server
source /opt/karoshi/server_network/group_information/'$PRIMARYGROUP'
if [ -d /opt/karoshi/server_network/servers/$SERVER ] && [ $SERVER != $HOSTNAME ]
then
ssh -x -o PasswordAuthentication=no $SERVER "rm -f -R '$HOMEPATH'/'$DELETEUSER'" 1>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE' 2>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
fi
#Delete logon script
[ -f /var/lib/samba/netlogon/windows_settings/drives/'$DELETEUSER'.kix ] && rm -f /var/lib/samba/netlogon/windows_settings/drives/'$DELETEUSER'.kix
#Delete security settings
[ -f /var/lib/samba/netlogon/windows_settings/security/'$DELETEUSER'.kix ] && rm -f /var/lib/samba/netlogon/windows_settings/security/'$DELETEUSER'.kix
#Delete group information
[ -f /opt/karoshi/server_network/group_information/'$DELETEUSER' ] && rm -f /opt/karoshi/server_network/group_information/'$DELETEUSER'
#Delete user from ldap
smbldap-userdel -r '$DELETEUSER'
#Delete home folder
[ -d '$HOMEPATH''/''$DELETEUSER' ] && rm -f -R '$HOMEPATH''/''$DELETEUSER'
#Delete inbox
[ -f /var/spool/mail/'$DELETEUSER' ] && rm -f /var/spool/mail/'$DELETEUSER'

#Delete user from any federated slave ldap servers
if [ -d /opt/karoshi/server_network/slave_ldap_servers/ ]
then
if [ `ls -1 /opt/karoshi/server_network/slave_ldap_servers/ | wc -l` -gt 0 ]
then
for SLAVELDAPSERVERS in /opt/karoshi/server_network/slave_ldap_servers/*
do
SLAVELDAPSERVER=`basename $SLAVELDAPSERVERS`
echo `date`: delete_user \(federated mode\) - deleting $DELETEUSER on $SLAVELDAPSERVER from '$REMOTE_ADDR' by '$REMOTE_USER' >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
ssh -x -o PasswordAuthentication=no $SLAVELDAPSERVER "
smbldap-userdel -r '$DELETEUSER'
#Delete home folder
[ -d '$HOMEPATH'/'$DELETEUSER' ] && rm -f -R '$HOMEPATH'/'$DELETEUSER'
#Delete inbox
[ -f /var/spool/mail/'$DELETEUSER' ] && rm -f /var/spool/mail/'$DELETEUSER'
" 1>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE' 2>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
done
fi
fi

#Rebuild primarygroups.txt - this file is to allow for windows 7 logins where the primary group feature is broken
[ -f /var/lib/samba/netlogon/primarygroups.txt ] && rm -f /var/lib/samba/netlogon/primarygroups.txt
for USERDETAILS in `getent passwd | grep /home/users/`
do
KAROSHIUSER=`echo $USERDETAILS | cut -d: -f1 | sed "s/,//g"`
PRIGROUP=`id -g -n $KAROSHIUSER`
echo $KAROSHIUSER,$PRIGROUP >> /var/lib/samba/netlogon/primarygroups.txt
done
' 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
done
fi

#Delete request file if this user has been requested by a member of staff
if [ $REQUESTFILE'null' != null ]
then
if [ -f /opt/karoshi/user_requests/delete_users/$REQUESTFILE ]
then
rm -f /opt/karoshi/user_requests/delete_users/$REQUESTFILE
DELUSERCOUNT=`ls -1 /opt/karoshi/user_requests/delete_users/ | wc -l`
if [ $DELUSERCOUNT = 0 ]
then
#Update warnings
/opt/karoshi/serversetup/web_controls/scripts/web_management_warn delete request_delete_users
fi
fi
fi
#Move user infomation from the approved user list to the deleted approved user list

if [ -f /opt/karoshi/acceptable_use_authorisations/approved_users ]
then
if [ `grep -c -w $DELETEUSER /opt/karoshi/acceptable_use_authorisations/approved_users` != 0 ]
then
PENDING_USER_DATA=`grep -w $DELETEUSER /opt/karoshi/acceptable_use_authorisations/approved_users`
CREATION_DATE=`echo $PENDING_USER_DATA | cut -d, -f2`
PRI_GROUP=`echo $PENDING_USER_DATA | cut -d, -f3`
USER_CREATOR=`echo $PENDING_USER_DATA | cut -d, -f4`
USER_AUTHORISOR=`echo $PENDING_USER_DATA | cut -d, -f5`
AUTH_DATE=`echo $PENDING_USER_DATA | cut -d, -f6`
#Add data to the deleted user list
echo $DELETEUSER,$CREATION_DATE,$PRI_GROUP,$USER_CREATOR,$USER_AUTHORISOR,$AUTH_DATE >>  /opt/karoshi/acceptable_use_authorisations/deleted_users
#Delete data
sed -i '/'$DELETEUSER',/d' /opt/karoshi/acceptable_use_authorisations/approved_users
#Remove any empty lines
sed -i '/^$/d' /opt/karoshi/acceptable_use_authorisations/approved_users
fi
fi

#Delete Acceptable use pending if this user is on a trial account
if [ -f /opt/karoshi/acceptable_use_authorisations/pending/$DELETEUSER ]
then
rm -f /opt/karoshi/acceptable_use_authorisations/pending/$DELETEUSER
#Clear warning message if needed
if [ `ls -1 /opt/karoshi/acceptable_use_authorisations/pending | wc -l` -lt 1 ]
then
/opt/karoshi/serversetup/web_controls/scripts/web_management_warn delete acceptable_use_authorisations
fi
fi

#######################
#Delete the account on any email servers
#######################
if [ -f /opt/karoshi/server_network/emailserver ]
then
EMAILSERVER=`sed -n 1,1p /opt/karoshi/server_network/emailserver`
if [ $EMAILSERVER != $HOSTNAME ]
then 
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $EMAILSERVER '
rm -f -R /home/users/email/'$DELETEUSER'
'
SSHSTATUS=`echo $?`
if [ $SSHSTATUS != 0 ]
then
echo `date`: delete_user - $DELETEUSER ssh failure on $SERVER by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo $SERVER,emailserver >> /opt/karoshi/server_network/offline_servers/delete_users/$DELETEUSER
FAILED_SERVER=yes
FAILEDSERVERLIST=$FAILEDSERVERLIST,$SERVER
fi
else
rm -f -R /home/users/email/$DELETEUSER
fi
fi

exit $DELETE_USER_STATUS
