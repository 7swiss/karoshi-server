#!/bin/bash
#Copyright (C) 2007 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/module_fileserver_cgi
then
echo `date`: module_fileserver - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/module_fileserver_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/module_fileserver.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $module_fileserver_cgi'check' ]
then
echo `date`: module_fileserver - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: module_fileserver - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n-+-'`
if [ $DATA'null' = null ]
then
echo `date`: module_fileserver - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
SERVERNAME=`echo "$DATA" | cut -s -d: -f4`
#PASSWORD=`echo "$DATA" | cut -s -d: -f5`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: module_fileserver - Not called by module_fileserver.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: module_fileserver - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: module_fileserver - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $SERVERNAME'null' = null ]
then
echo `date`: module_fileserver - Blank servername by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
#if [ $PASSWORD'null' = null ]
#then
#echo `date`: module_fileserver - Blank password by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#exit 101
#fi

echo `date`: module_fileserver - Setting up $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

LANGCHOICE=englishuk
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/serversetup/language/$LANGCHOICE/modules/fileserver/setupfileserver ] || LANGCHOICE=englishuk

#Copy in language files
scp -p -r /opt/karoshi/serversetup/language/$LANGCHOICE/modules/fileserver root@$SERVERNAME:/opt/karoshi/serversetup/language/$LANGCHOICE/modules/ 1> /dev/null
#Copy in module
scp -p -r /opt/karoshi/serversetup/modules/fileserver root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null


##########################
#Configure ldap
##########################
CONFIGURE_LDAP=yes
if [ $SERVERNAME = $HOSTNAME ]
then
CONFIGURE_LDAP=no
fi
if [ -f /opt/karoshi/server_network/slave_ldap_servers/$SERVERNAME ]
then
CONFIGURE_LDAP=no
fi
if [ -f /opt/karoshi/server_network/ldap_clients/$SERVERNAME ]
then
CONFIGURE_LDAP=no
fi

#########################
#Ldap user check
#########################
if [ $SERVERNAME != $HOSTNAME ] && [ $CONFIGURE_LDAP != yes ]
then
PDCUSERCOUNT=`getent passwd | grep -c :/home/users/`

SERVERUSERCOUNT=`ssh -x -o PasswordAuthentication=no $SERVERNAME '
getent passwd | grep -c :/home/users/
'
`
[ $PDCUSERCOUNT != $SERVERUSERCOUNT ] && CONFIGURE_LDAP=yes
fi



PDCIP=`net lookup $HOSTNAME`
if [ $CONFIGURE_LDAP = yes ]
then
ssh -x -o PasswordAuthentication=no $SERVERNAME '
echo "'$REMOTE_USER':'$REMOTE_ADDR':'$MD5SUM':'$HOSTNAME':'$PDCIP':" | /opt/karoshi/serversetup/modules/ldap/configureldap
'
#Copy in /etc/ldap.secret
scp -p /etc/ldap.secret root@$SERVERNAME:/etc/ 1> /dev/null
[ ! -d /opt/karoshi/server_network/ldap_clients/ ] && mkdir -p /opt/karoshi/server_network/ldap_clients/
touch /opt/karoshi/server_network/ldap_clients/$SERVERNAME
fi

#Make sure karoshiadmins user exists
getent passwd karoshiadmin 1>/dev/null
if [ `echo $?` != 0 ]
then
#Create karoshiadmin user and add to itadmin
PRIMARYGROUPID=`getent group | grep -w ^itadmin | cut -d: -f3 | sed -n 1,1p`
[ $PRIMARYGROUPID'null' = null ] && exit 101
karoshildap-useradd -a -g $PRIMARYGROUPID -G "Domain Admins" -d /home/users/itadminstaff/karoshiadmin -c karoshiadmin -N add -S client karoshiadmin 1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE

#Move user to the correct sub organisation unit
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
#Create ldif for new user
[ -f /opt/karoshi/.tempdata/karoshiadmin.$$.ldif ] && rm -f /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
touch /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
chmod 0600 /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
ldapsearch -x -w $LDAPPASS -D "cn=admin,dc=karoshi,dc=local" uid=karoshiadmin > /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
#Modify ldif file with correct sub organisation unit
sed -i 's/ou=People,dc=karoshi,dc=local/ou=itadmin,ou=personnel,ou=People,dc=karoshi,dc=local/g' /opt/karoshi/.tempdata/karoshiadmin.$$.ldif
#Delete user entry from the top organisation unit
ldapdelete -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS uid=karoshiadmin,ou=People,dc=karoshi,dc=local
#Import user ldif file to correct sub organisation unit
ldapadd -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS -f /opt/karoshi/.tempdata/karoshiadmin.$$.ldif 1>/dev/null 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi

#Generate random password for karoshiadmin user
PASSCHOICE=( A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y x 1 2 3 4 5 6 7 8 9 0 )

RANGE=`echo ${#PASSCHOICE[@]}`
let RANGE=$RANGE-1 

COUNTER=1
while [ $COUNTER -le 16 ]
do
ARRAYCHOICE=$RANDOM
let "ARRAYCHOICE %= $RANGE"
RANDPASSWORD[$COUNTER]=`echo ${PASSCHOICE[$ARRAYCHOICE]} `
let COUNTER=COUNTER+1
done
PASSWORD=`echo ${RANDPASSWORD[@]:0} | sed 's/ //g'`

#Change karoshiadmin password 
echo -e "$PASSWORD""\n""$PASSWORD" | smbldap-passwd karoshiadmin 1>/dev/null 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

#Get samba domain
SAMBADOMAIN=`cat /etc/samba/smb.conf | grep workgroup | sed -n 1,1p | sed 's/ //g' | cut -d'=' -f2`

#allow karoshiadmin to join clients to the domain
echo `date`: module_fileserver - allowing karoshiadmin to "join" clients to the domain by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

net rpc rights grant -U karoshiadmin%$PASSWORD "$SAMBADOMAIN\Domain Admins" SeMachineAccountPrivilege \
SePrintOperatorPrivilege SeAddUsersPrivilege SeDiskOperatorPrivilege SeRemoteShutdownPrivilege 1>/dev/null

##########################
#Run module
##########################
scp -p -r /opt/karoshi/serversetup/modules/fileserver root@$SERVERNAME:/opt/karoshi/serversetup/modules/ 1> /dev/null
echo SAMBADOMAIN="$SAMBADOMAIN" > /opt/karoshi/server_network/domain_information/domain_name
source /opt/karoshi/server_network/domain_information/domain_name
ssh -x -o PasswordAuthentication=no $SERVERNAME '
echo '$REMOTE_USER:$REMOTE_ADDR:$MD5SUM:$PASSWORD:$HOSTNAME:$PDCIP:$SAMBADOMAIN:' | /opt/karoshi/serversetup/modules/fileserver/setupfileserver
'
[ `echo $?` = 101 ] && exit 101

##########################
#Language
##########################
LANGCHOICE=englishuk
STYLESHEET=defaultstyle.css
[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/serversetup/language/$LANGCHOICE/modules/fileserver/setupfileserver ] || LANGCHOICE=englishuk
source /opt/karoshi/serversetup/language/$LANGCHOICE/modules/fileserver/setupfileserver
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all

#Add role information
[ ! -d /opt/karoshi/server_network/servers/$SERVERNAME ] && mkdir -p /opt/karoshi/server_network/servers/$SERVERNAME
echo $ROLE"<br>" > /opt/karoshi/server_network/servers/$SERVERNAME/fileserver
[ -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role ] && rm -f /opt/karoshi/server_network/servers/$SERVERNAME/no_role




