#!/bin/bash
#Copyright (C) 2007 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/user_image_bulk_process_cgi
then
echo `date`: user_image_bulk_process - No admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/user_image_bulk_process_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/user_image_bulk_process.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $user_image_bulk_process_cgi'check' ]
then
echo `date`: user_image_bulk_process - Incorrect admin MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/user_image_bulk_process_cgi
then
echo `date`: user_image_bulk_process - No tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/user_image_bulk_process_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/user_image_bulk_process.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $user_image_bulk_process_cgi'check' ]
then
echo `date`: user_image_bulk_process - Incorrect tech MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi


########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: user_image_bulk_upload - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: user_image_bulk_upload - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
COMPRESSEDFILE=`echo "$DATA" | cut -s -d: -f4`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: user_image_bulk_upload - Not called by user_image_bulk_process.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: user_image_bulk_upload - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: user_image_bulk_upload - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $COMPRESSEDFILE'null' = null ]
then
echo `date`: user_image_bulk_upload - Blank compressed file by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_tech` != 1 ]
then
echo `date`: user_image_bulk_upload - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if [ ! -f /var/www/karoshi/user_image_bulk_upload/$COMPRESSEDFILE ]
then
echo `date`: user_image_bulk_upload - Missing compressed file by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
#Process compressed file
[ -d /opt/karoshi/.tempdata/user_image_bulk_upload.$$ ] && rm -f -R /opt/karoshi/.tempdata/user_image_bulk_upload.$$
mkdir /opt/karoshi/.tempdata/user_image_bulk_upload.$$
mv /var/www/karoshi/user_image_bulk_upload/$COMPRESSEDFILE /opt/karoshi/.tempdata/user_image_bulk_upload.$$/
cd /opt/karoshi/.tempdata/user_image_bulk_upload.$$

COMPRESSIONTYPE=NOT_SET
[ `echo $COMPRESSEDFILE | grep -c .tar.gz$` = 1 ] && COMPRESSIONTYPE=TARGZ
[ `echo $COMPRESSEDFILE | grep -c .zip$` = 1 ] && COMPRESSIONTYPE=ZIP

if [ $COMPRESSIONTYPE = NOT_SET ]
then
echo `date`: user_image_bulk_upload - Incorrect compressed file type by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi 

echo `date`: user_image_bulk_upload - $COMPRESSEDFILE by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#Uncompress file
[ $COMPRESSIONTYPE = TARGZ ] && tar -xf /opt/karoshi/.tempdata/user_image_bulk_upload.$$/$COMPRESSEDFILE
[ $COMPRESSIONTYPE = ZIP ] && unzip /opt/karoshi/.tempdata/user_image_bulk_upload.$$/$COMPRESSEDFILE 1>/dev/null
rm -f /opt/karoshi/.tempdata/user_image_bulk_upload.$$/$COMPRESSEDFILE

#Check users exist and move images to correct location

ls -1 /opt/karoshi/.tempdata/user_image_bulk_upload.$$/ > /opt/karoshi/.tempdata/user_image_bulk_upload_list.$$

IMAGE_COUNT=`cat /opt/karoshi/.tempdata/user_image_bulk_upload_list.$$ | wc -l`

[ -f /opt/karoshi/web_controls/user_prefs/$REMOTE_USER ] && source /opt/karoshi/web_controls/user_prefs/$REMOTE_USER
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/user/user_image_bulk_upload ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/user/user_image_bulk_upload
[ -f /opt/karoshi/web_controls/language/$LANGCHOICE/all ] || LANGCHOICE=englishuk
source /opt/karoshi/web_controls/language/$LANGCHOICE/all

echo '<b>'$TITLE'</b><br><br>'

if [ $IMAGE_COUNT = 0 ]
then
echo `date`: user_image_bulk_upload - $ERRORMSG4 by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo $ERRORMSG4
exit 101
fi

LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
COUNTER=1
while [ $COUNTER -le $IMAGE_COUNT ]
do
IMAGE_NAME=`sed -n $COUNTER,$COUNTER'p' /opt/karoshi/.tempdata/user_image_bulk_upload_list.$$`
#Check image
if [ `echo $IMAGE_NAME | grep -c .jpg$` = 1 ]
then
FILENAME_NO_EXT=`echo $IMAGE_NAME | sed 's/.jpg//g' | sed 's/ /space/g'`

#Check to see if username or enrollment number is being used
IMAGESTYLE=notset
id -g $FILENAME_NO_EXT 1>/dev/null
if [ `echo $?` = 0 ]
then
USERNAME=$FILENAME_NO_EXT
IMAGESTYLE=usernamematch
fi

if [ $IMAGESTYLE = notset ]
then
USERNAME=`ldapsearch -x -w $LDAPPASS -D "cn=admin,dc=karoshi,dc=local" employeeNumber=$FILENAME_NO_EXT | grep ^uid: | sed 's/uid: //g'`
[ $USERNAME'null' != null ] && IMAGESTYLE=enrollmentmatch
fi

if [ $IMAGESTYLE != notset ]
then
PRIMARYGROUP=`id -g -n $USERNAME`
if [ ! -d /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/ ]
then
mkdir -p /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/
chown root.apache_karoshi /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/
chmod 0550 /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/
fi
mv /opt/karoshi/.tempdata/user_image_bulk_upload.$$/$IMAGE_NAME /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/$USERNAME.jpg
chown root.apache_karoshi /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/$USERNAME.jpg
chmod 0440 /var/www/html_karoshi/images/user_images/$PRIMARYGROUP/$USERNAME.jpg
echo $USERNAME - $IMAGE_NAME - $PRIMARYGROUP - $IMAGECOPYMSG'<br>'
else
echo `date`: user_image_bulk_upload - $IMAGE_NAME - $ERRORMSG6 by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo $IMAGE_NAME - $ERRORMSG6'<br>'
fi
else
echo `date`: user_image_bulk_upload - $IMAGE_NAME - $ERRORMSG5 by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
echo $IMAGE_NAME - $ERRORMSG5'<br>'
fi
let COUNTER=$COUNTER+1
done

rm -f /opt/karoshi/.tempdata/user_image_bulk_upload_list.$$
rm -f -R /opt/karoshi/.tempdata/user_image_bulk_upload.$$

echo '<br><br>'$COMPLETEDMSG
exit
