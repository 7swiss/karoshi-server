#!/bin/bash
#Copyright (C) 2007  The karoshi Team

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/change_username_cgi
then
echo `date`: change_username - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/change_username_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/change_username.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $change_username_cgi'check' ]
then
echo `date`: change_username - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/change_username_cgi
then
echo `date`: change_username - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/change_username_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/change_username.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $change_username_cgi'check' ]
then
echo `date`: change_username - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: change_username - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:%\n\-+'`
if [ $DATA'null' = null ]
then
echo `date`: change_username - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
CURRENT_USERNAME=`echo "$DATA" | cut -s -d: -f4`
NEW_USERNAME=`echo "$DATA" | cut -s -d: -f5`
########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: change_username - Not called by change_username.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: change_username - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: change_username - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $CURRENT_USERNAME'null' = null ]
then
echo `date`: change_username - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $NEW_USERNAME'null' = null ]
then
echo `date`: change_username - Blank new username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/admin_users/web_access_tech` != 1 ]
then
echo `date`: change_username - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Change the username
########################
echo `date`: change_username - Changing username "for" $CURRENT_USERNAME to $NEW_USERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#Get current path for user
CURRENTPATH=`getent passwd $CURRENT_USERNAME | cut -d: -f6`
#Get new path for user
COUNTER=10
while [ $COUNTER -ge 1 ]
do
PARENTPATH=`echo $CURRENTPATH | cut -d/ -f$COUNTER`
if [ $PARENTPATH'null' != null ]
then
let COUNTER=$COUNTER-1
PARENTPATH=`echo $CURRENTPATH | cut -d/ -f1-$COUNTER`
break
fi
let COUNTER=$COUNTER-1
done
#Get primary group for user
PRIMARYGROUP=`id -g -n $CURRENT_USERNAME`
#########################
#Change username
#########################
ldapsearch -x -b "ou=People,dc=karoshi,dc=local" uid="$CURRENT_USERNAME" > /opt/karoshi/.tempdata/$CURRENT_USERNAME.$$.ldif
LDAPSTATUS=`echo $?`
sed -i "s/$CURRENT_USERNAME/$NEW_USERNAME/g" /opt/karoshi/.tempdata/$CURRENT_USERNAME.$$.ldif
if [ $LDAPSTATUS = 0 ]
then
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
smbldap-userdel $CURRENT_USERNAME
ldapadd -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS -f /opt/karoshi/.tempdata/$CURRENT_USERNAME.$$.ldif 1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE
else
exit 101
fi

#Rebuild primarygroups.txt - this file is to allow for windows 7 logins where the primary group feature is broken
[ -f /var/lib/samba/netlogon/primarygroups.txt ] && rm -f /var/lib/samba/netlogon/primarygroups.txt
for USERDETAILS in `getent passwd | grep /home/users/`
do
KAROSHIUSER=`echo $USERDETAILS | cut -d: -f1 | sed 's/,//g'`
PRIGROUP=`id -g -n $KAROSHIUSER`
echo $KAROSHIUSER,$PRIGROUP >> /var/lib/samba/netlogon/primarygroups.txt
done

#########################
#Move files to new area
#########################
source /opt/karoshi/server_network/group_information/$PRIMARYGROUP
if [ -d $CURRENTPATH ]
then
mv $CURRENTPATH $PARENTPATH/$NEW_USERNAME
chmod 0600 -R $PARENTPATH/$NEW_USERNAME
chmod u+X -R $PARENTPATH/$NEW_USERNAME
chown $NEW_USERNAME:$PRIMARYGROUP -R $PARENTPATH/$NEW_USERNAME
CHANGE_PASS_STATUS=`echo $?`
fi
if [ $SERVER != $HOSTNAME ]
then
ssh -x -o PasswordAuthentication=no $SERVER 'mv '$CURRENTPATH' '$PARENTPATH/$NEW_USERNAME' ; chmod 0600 -R '$PARENTPATH''/''$NEW_USERNAME' ; chmod u+X -R '$PARENTPATH''/''$NEW_USERNAME' ; chown -R '$NEW_USERNAME':'$PRIMARYGROUP' '$PARENTPATH''/''$NEW_USERNAME''
fi
#Move mail
[ -f /var/spool/mail/$CURRENT_USERNAME ] && mv /var/spool/mail/$CURRENT_USERNAME /var/spool/mail/$NEW_USERNAME

if [ `ls -1 /opt/karoshi/server_network/slave_ldap_servers/ | wc -l` -gt 0 ]
then
for SLAVELDAPSERVERS in /opt/karoshi/server_network/slave_ldap_servers/*
do
SLAVELDAPSERVER=`basename $SLAVELDAPSERVERS`
scp /opt/karoshi/.tempdata/$CURRENT_USERNAME.$$.ldif root@$SLAVELDAPSERVER:"/opt/karoshi/.tempdata"
ssh -x -o PasswordAuthentication=no $SLAVELDAPSERVER '
smbldap-userdel '$CURRENT_USERNAME'
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
ldapadd -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS -f /opt/karoshi/.tempdata/'$CURRENT_USERNAME.$$.ldif' 1> /dev/null 2>/dev/null
mv '$CURRENTPATH' '$PARENTPATH/$NEW_USERNAME'
chmod 0600 -R '$PARENTPATH''/''$NEW_USERNAME'
chmod u+X -R '$PARENTPATH''/''$NEW_USERNAME'
chown -R '$NEW_USERNAME':'$PRIMARYGROUP' '$PARENTPATH''/''$NEW_USERNAME'
rm -f /opt/karoshi/.tempdata/'$CURRENT_USERNAME.$$.ldif'
#Move mail
[ -f /var/spool/mail/'$CURRENT_USERNAME' ] && mv /var/spool/mail/'$CURRENT_USERNAME' /var/spool/mail/'$NEW_USERNAME'

'
done
fi
rm -f /opt/karoshi/.tempdata/$CURRENT_USERNAME.$$.ldif
exit $CHANGE_PASS_STATUS
