#!/bin/bash
#Copyright (C) 2011 Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#

#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`

#Check server is online
function check_server_online {
CREATE_STATUS=ok
SERVERSTATUS=online
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $SERVER ls 1>/dev/null
SSHSTATUS=`echo $?`
if [ $SSHSTATUS != 0 ]
then
SERVERSTATUS=offline
echo `date`: add_user_offline_servers - $NEWUSERNAME ssh failure on $SERVER >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
CREATE_STATUS=fail
fi
}


function emailserver {
check_server_online
if [ $SERVERSTATUS != online ]
then
echo $SERVER is offline
break
fi
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $SERVER '
if [ '$ACTION' = adduser ]
then
if [ ! -d '$HOMEPATH'/'$NEWUSERNAME'/Mail ]
then
/opt/karoshi/"useful scripts"/createmailfolders
mkdir -p '$HOMEPATH'/'$NEWUSERNAME'/Mail
/opt/karoshi/"useful scripts"/createmailfolders
cp /opt/karoshi/.tempdata/INBOX.* '$HOMEPATH'/'$NEWUSERNAME'/Mail/
cp /opt/karoshi/.tempdata/.mailboxlist '$HOMEPATH'/'$NEWUSERNAME'
chown -R '$NEWUSERNAME:$PRIMARYGROUP' '$HOMEPATH'/'$NEWUSERNAME'/
chmod -R 0600 '$HOMEPATH'/'$NEWUSERNAME'/ ; chmod u+X -R '$HOMEPATH'/'$NEWUSERNAME'/
fi
else
[ -d '$HOMEPATH'/'$NEWUSERNAME'/ ] && rm -f -r '$HOMEPATH'/'$NEWUSERNAME'/
[ -f /var/spool/mail/'$NEWUSERNAME' ] && rm -f /var/spool/mail/'$NEWUSERNAME'
fi
'
[ `echo $?` != 0 ] && CREATE_STATUS=fail
}

function fileserver {
check_server_online
if [ $SERVERSTATUS != online ]
then
echo $SERVER is offline
break
fi
ssh -o PasswordAuthentication=no -o ConnectTimeout=3 $SERVER '
if [ ! -d '$HOMEPATH'/'$NEWUSERNAME' ]
then
mkdir -p '$HOMEPATH'/'$NEWUSERNAME'
chmod 0700 '$HOMEPATH'/'$NEWUSERNAME'
chown '$NEWUSERNAME':'$PRIMARYGROUP' '$HOMEPATH'/'$NEWUSERNAME'
fi
'
[ `echo $?` != 0 ] && CREATE_STATUS=fail
}

#######################
#Check to see if any users need processing due to servers being offline on user creation.
#######################

if [ `ls -1 /opt/karoshi/server_network/offline_servers | wc -l` != 0 ]
then 
for NEWUSERNAMEFILE in /opt/karoshi/server_network/offline_servers/add_users/*
do
ACTION=adduser
CREATE_STATUS=ok
NEWUSERNAME=`basename $NEWUSERNAMEFILE`
echo Processing $NEWUSERNAME
PRIMARYGROUP=`id -g -n $NEWUSERNAME`
echo Primary group $PRIMARYGROUP
SECONDARYGROUP=""
source /opt/karoshi/server_network/group_information/$PRIMARYGROUP
GROUPLIST=$SECONDARYGROUP
echo Homepath $HOMEPATH
FILE_LENGTH=`cat $NEWUSERNAMEFILE | wc -l`
COUNTER=1
while [ $COUNTER -le $FILE_LENGTH ]
do
SERVER_DATA=`sed -n $COUNTER,$COUNTER'p' $NEWUSERNAMEFILE`
SERVER=`echo $SERVER_DATA | cut -d, -f1`
SERVERTYPE=`echo $SERVER_DATA | cut -d, -f2`

[ $SERVERTYPE = fileserver ] && fileserver
[ $SERVERTYPE = emailserver ] && emailserver
[ $CREATE_STATUS = ok ] && sed -i $COUNTER'c'\\" "  /opt/karoshi/server_network/offline_servers/$NEWUSERNAME

let COUNTER=$COUNTER+1
done
sed -i 's/ //g' /opt/karoshi/server_network/offline_servers/add_users/$NEWUSERNAME
sed -i '/^$/d' /opt/karoshi/server_network/offline_servers/add_users/$NEWUSERNAME

[ `cat /opt/karoshi/server_network/offline_servers/add_users/$NEWUSERNAME | wc -l` = 0 ] && rm -f /opt/karoshi/server_network/offline_servers/add_users/$NEWUSERNAME
done
fi
exit

