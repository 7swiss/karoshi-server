#!/bin/bash
#Copyright (C) 2009  Paul Sharrad

#This file is part of Karoshi Server.
#
#Karoshi Server is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Server is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Server.  If not, see <http://www.gnu.org/licenses/>.

#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit
########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/dnsadd_cgi
then
echo `date`: dnsadd - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/dnsadd_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/dnsadd.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $dnsadd_cgi'check' ]
then
echo `date`: dnsadd - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: dnsadd - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-+'`
if [ $DATA'null' = null ]
then
echo `date`: dnsadd - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
TCPIP=`echo "$DATA" | cut -s -d: -f4`
DNSENTRY=`echo "$DATA" | cut -s -d: -f5`
SERVERNAME=`echo "$DATA" | cut -s -d: -f6`
SERVERTYPE=`echo "$DATA" | cut -s -d: -f7`
########################
#Check data
########################

if [ $REMOTE_MD5'check' != $MD5SUM'check' ]
then
echo `date`: dnsadd - Not called by dnsadd.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$REMOTE_USER" ]
then
echo `date`: dnsadd - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$REMOTE_ADDR" ]
then
echo `date`: dnsadd - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$TCPIP" ]
then
echo `date`: dnsadd - Blank tcpip entry by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$DNSENTRY" ]
then
echo `date`: dnsadd - Blank dns entry by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$SERVERNAME" ]
then
echo `date`: dnsadd - Blank servername entry by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ -z "$SERVERTYPE" ]
then
echo `date`: dnsadd - Blank servertype entry by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

DNSENTRY=`echo $DNSENTRY | sed 's/+/ /g'`

echo `date`: dnsadd - $TCPIP $DNSENTRY on $SERVERNAME by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE

if [ $SERVERNAME = $HOSTNAME ] && [ $SERVERTYPE = network ]
then
#Add in new entry
echo -e "$TCPIP\t\t$DNSENTRY\t\t$DNSENTRY.$REALM" >> /etc/hosts
#Sort entries
cat /etc/hosts | sort > /etc/hosts.$$
rm -f /etc/hosts
mv /etc/hosts.$$ /etc/hosts

#Add entry to samba4 dns
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
source /opt/karoshi/server_network/domain_information/domain_name
echo `date`: dnsadd - checking "if" $DNSENTRY is "in" the dns records by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
samba-tool dns query 127.0.0.1 $REALM $DNSENTRY A --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
if [ `echo $?` != 0 ]
then
echo `date`: dnsadd - adding $DNSENTRY $TCPIPNUMBER to the dns records by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
samba-tool dns add 127.0.0.1 $REALM $DNSENTRY A $TCPIP --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
fi
fi

if [ $SERVERTYPE = federated ]
then
ssh -o PasswordAuthentication=no -o ConnectTimeout=3  $SERVERNAME '
#Add in new entry
echo -e "'$TCPIP'\t\t'$DNSENTRY'\t\t'$DNSENTRY'.internal" >> /etc/hosts
#Sort entries
cat /etc/hosts | sort > /etc/hosts.'$$'
rm -f /etc/hosts
mv /etc/hosts.'$$' /etc/hosts

#Add entry to samba4 dns
LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
source /opt/karoshi/server_network/domain_information/domain_name
echo `date`: dnsadd - checking "if" '$DNSENTRY' is "in" the dns records by '$REMOTE_USER' from '$REMOTE_ADDR' >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
samba-tool dns query 127.0.0.1 '$REALM' '$DNSENTRY' A --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE' 2>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
if [ `echo $?` != 0 ]
then
echo `date`: dnsadd - adding '$DNSENTRY' '$TCPIPNUMBER' to the dns records by '$REMOTE_USER' from '$REMOTE_ADDR' >> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
samba-tool dns add 127.0.0.1 '$REALM' '$DNSENTRY' A '$TCPIP' --username=Administrator --password=$LDAPPASS 1>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE' 2>> /opt/karoshi/logs/karoshi_web_management/'$LOG_DATE'
fi

'
fi
exit

