#!/bin/bash
#Copyright (C) 2007  The karoshi Team
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
LOG_DATE=`date +%F`
[ $LOG_DATE'null' = null ] && exit

########################
#Check md5checksum
########################
if ! test -f /opt/karoshi/web_controls/checksums/admin_checksums/change_primary_group_cgi
then
echo `date`: change_primary_group - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/admin_checksums/change_primary_group_cgi
MD5SUM=`md5sum /var/www/cgi-bin_karoshi/admin/change_primary_group.cgi | cut -d' ' -f1`
[ $MD5SUM'null' = null ] && MD5SUM=not_set
if [ $MD5SUM'check' != $change_primary_group_cgi'check' ]
then
echo `date`: change_primary_group - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if ! test -f /opt/karoshi/web_controls/checksums/tech_checksums/change_primary_group_cgi
then
echo `date`: change_primary_group - No MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
source /opt/karoshi/web_controls/checksums/tech_checksums/change_primary_group_cgi
MD5SUM2=`md5sum /var/www/cgi-bin_karoshi/tech/change_primary_group.cgi | cut -d' ' -f1`
[ $MD5SUM2'null' = null ] && MD5SUM2=not_set
if [ $MD5SUM2'check' != $change_primary_group_cgi'check' ]
then
echo `date`: change_primary_group - Incorrect MD5Checksum >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Get variables
########################
numArgs=$#
if [ $numArgs != 0 ]
then
echo `date`: change_primary_group - incorrect number of arguments >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
read DATA
DATA=`echo $DATA | tr -cd 'A-Za-z0-9\._:\-'`
if [ $DATA'null' = null ]
then
echo `date`: change_password - no data >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
REMOTE_USER=`echo "$DATA" | cut -s -d: -f1`
REMOTE_ADDR=`echo "$DATA" | cut -s -d: -f2`
REMOTE_MD5=`echo "$DATA" | cut -s -d: -f3`
USERNAME=`echo "$DATA" | cut -s -d: -f4`
NEWPRIGROUP=`echo "$DATA" | cut -s -d: -f5`

########################
#Check data
########################
if [ $REMOTE_MD5'check' != $MD5SUM'check' ] && [ $REMOTE_MD5'check' != $MD5SUM2'check' ]
then
echo `date`: change_primary_group - Not called by change_primary_group.cgi >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_USER'null' = null ]
then
echo `date`: change_primary_group - Blank remote user >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $REMOTE_ADDR'null' = null ]
then
echo `date`: change_primary_group - Blank remote tcpip address >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ $USERNAME'null' = null ]
then
echo `date`: change_primary_group - Blank username by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit
fi
if [ $NEWPRIGROUP'null' = null ]
then
echo `date`: change_primary_group - Blank new primary group by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
if [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/web_access_admin` != 1 ] && [ `grep -c ^$REMOTE_USER: /opt/karoshi/web_controls/admin_users/web_access_tech` != 1 ]
then
echo `date`: change_primary_group - access denied to $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi
########################
#Change the primary group
########################
echo `date`: change_primary_group - Changing the primary group "for" $USERNAME to $NEWPRIGROUP by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE


function get_subunit {
#############################
#Determine sub organisation group for the user
#############################
SUBUNIT=students
if [ $PRIMARYGROUP = staff ] || [ $PRIMARYGROUP = itadmin ] || [ $PRIMARYGROUP = officestaff ] || [ $PRIMARYGROUP = tech ] || [ $PRIMARYGROUP = nonteachingstaff ] || [ $PRIMARYGROUP = staff ] || [ $PRIMARYGROUP = studentstaff ]
then
SUBUNIT=personnel
fi
if [ $PRIMARYGROUP = guests ]
then
SUBUNIT=other
fi
}

#Get data on user
CURRENTPATH=`getent passwd | grep ^$USERNAME | cut -d: -f6`
CURRENTPRIGROUP=`id -g -n $USERNAME`
PRIMARYGROUP=$CURRENTPRIGROUP
get_subunit
CURRENTSUBUNIT=$SUBUNIT
source /opt/karoshi/server_network/group_information/$CURRENTPRIGROUP
CURRENT_SERVER=$SERVER
if [ $CURRENT_SERVER'null' = null ]
then
echo `date`: change_primary_group - Blank current server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

PRIMARYGROUP=$NEWPRIGROUP
source /opt/karoshi/server_network/group_information/$NEWPRIGROUP
get_subunit
NEWSUBUNIT=$SUBUNIT
NEW_SERVER=$SERVER
if [ $NEW_SERVER'null' = null ]
then
echo `date`: change_primary_group - Blank new server by $REMOTE_USER from $REMOTE_ADDR >> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
exit 101
fi

#echo current pri group is $CURRENTPRIGROUP"<br>"
#echo current sub unit is $CURRENTSUBUNIT"<br>"
#echo new pri group is $NEWPRIGROUP"<br>"
#echo new sub unit is $NEWSUBUNIT"<br>"

#Remove user from current primary group
samba-tool group removemembers "$CURRENTPRIGROUP" $USERNAME  1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#Add user to new primary group
samba-tool group addmembers "$NEWPRIGROUP" $USERNAME  1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE
#Set new home path for the user
echo -e "dn: CN=$USERNAME,CN=$PRIMARYGROUP,CN=$SUBUNIT,CN=Users,$LDAPBASE
changetype: modify
add: unixhomedirectory
unixhomedirectory: $HOMEPATH/$USERNAME
-" | ldapmodify -x -D "CN=Administrator,CN=Users,$LDAPBASE" -w $LDAPPASS 1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE

PRIGROUPID=`getent group $PRIMARYGROUP | cut -d: -f3`

echo -e "dn: CN=$USERNAME,CN=$PRIMARYGROUP,CN=$SUBUNIT,CN=Users,$LDAPBASE
changetype: modify
replace: primaryGroupID
primaryGroupID: $PRIGROUPID
-" | ldapmodify -x -D "CN=Administrator,CN=Users,$LDAPBASE" -w $LDAPPASS 1>/dev/null 2>>/opt/karoshi/logs/karoshi_web_management/$LOG_DATE


#Check that home area should still be on the same server

if [ $CURRENT_SERVER = $NEW_SERVER ]
then
#Move home area
if [ -d $CURRENTPATH ]
then
mv $CURRENTPATH $HOMEPATH
chmod 0600 -R $HOMEPATH/$USERNAME
chmod u+X -R $HOMEPATH/$USERNAME
chown $USERNAME:$NEWPRIGROUP $HOMEPATH/$USERNAME
fi
fi
############################
#Change path on other server
############################
if [ $CURRENT_SERVER != $NEW_SERVER ]
then
ssh -x -o PasswordAuthentication=no $SERVER 'mv '$CURRENTPATH' '$HOMEPATH' ; chmod 0600 -R '$HOMEPATH''/''$USERNAME' ; chmod u+X -R '$HOMEPATH''/''$USERNAME' ; chown -R '$USERNAME':'$PRIMARYGROUP' '$HOMEPATH''/''$USERNAME'' 2>$HOME/.tempdata/ssherrors1
fi

############################
#Change path on slave ldap servers
############################
if [ `ls -1 /opt/karoshi/server_network/slave_ldap_servers/ | wc -l` -gt 0 ]
then
for SLAVELDAPSERVERS in /opt/karoshi/server_network/slave_ldap_servers/*
do
SLAVELDAPSERVER=`basename $SLAVELDAPSERVERS`
scp /opt/karoshi/.tempdata/$USERNAME.$$.ldif root@$SLAVELDAPSERVER:"/opt/karoshi/.tempdata/"
ssh -x -o PasswordAuthentication=no $SLAVELDAPSERVER '
#smbldap-usermod -g '$NEWPRIGROUP' '$USERNAME'
#smbldap-usermod -d '$HOMEPATH'/'$USERNAME' '$USERNAME'

LDAPPASS=`sed -n 1,1p /etc/ldap.secret`
#Delete user entry from the current organisation unit
ldapdelete -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS uid='$USERNAME',ou='$CURRENTPRIGROUP',ou='$CURRENTSUBUNIT',ou=People,dc=karoshi,dc=local
ldapadd -x -D "cn=admin,dc=karoshi,dc=local" -w $LDAPPASS -f /opt/karoshi/.tempdata/'$USERNAME'.'$$'.ldif 1>/dev/null 2>/dev/null
#Delete ldif file
rm -f /opt/karoshi/.tempdata/'$USERNAME'.'$$'.ldif
mv '$CURRENTPATH' '$HOMEPATH' ; chmod -R 0600 '$HOMEPATH'/'$USERNAME'/
chmod u+X '-R $HOMEPATH'/'$USERNAME'/
chown -R '$USERNAME':'$PRIMARYGROUP' -R '$HOMEPATH'/'$USERNAME'/
' 2>> /opt/karoshi/logs/karoshi_web_management/$LOG_DATE
done
fi

#Delete ldif file
rm -f /opt/karoshi/.tempdata/$USERNAME.$$.ldif

if [ $CURRENT_SERVER != $NEW_SERVER ]
then
#Create temp folder for tar archive
HOMETEMPFOLDER=`date +%s`
COUNTER=1
while [ ! -d /home/$HOMETEMPFOLDER ]
do
HOMETEMPFOLDER=`date +%s`
[ -d /home/$HOMETEMPFOLDER ] || mkdir /home/$HOMETEMPFOLDER
COUNTER=$COUNTER+1
if [ $COUNTER = 5 ]
then
echo Error creating /home/$HOMETEMPFOLDER
exit
fi
done
#Tar user folder, copy file to pdc
if [ $CURRENT_SERVER = $HOSTNAME ]
then
cd $CURRENTPATH ; cd ../ ; tar -czf $USERNAME.tar.gz $USERNAME ; rm -f -R $USERNAME
mv $USERNAME.tar.gz /home/$HOMETEMPFOLDER/
else
ssh -x -o PasswordAuthentication=no $CURRENT_SERVER 'cd '$CURRENTPATH' ; cd ../ ; tar -czf '$USERNAME'.tar.gz '$USERNAME''
scp root@$CURRENT_SERVER:/$CURRENTPATH.tar.gz /home/$HOMETEMPFOLDER/
ssh -x -o PasswordAuthentication=no $CURRENT_SERVER 'cd '$CURRENTPATH' ; cd ../ ; rm -f '$USERNAME'.tar.gz ; rm -f -R '$USERNAME''
fi

#Copy file to new server and extract tar archive
if [ $NEW_SERVER = $HOSTNAME ]
then
mv /home/$HOMETEMPFOLDER/$USERNAME.tar.gz $HOMEPATH
cd $HOMEPATH ; tar -xvf $USERNAME.tar.gz ; rm -f $USERNAME.tar.gz ; chown :$NEWPRIGROUP -R $USERNAME
else
scp /home/$HOMETEMPFOLDER/$USERNAME.tar.gz root@$NEW_SERVER:/$HOMEPATH/
ssh -x -o PasswordAuthentication=no $NEW_SERVER 'cd '$HOMEPATH' ; tar -xvf '$USERNAME'.tar.gz ; rm -f '$USERNAME'.tar.gz ; chown :'$NEWPRIGROUP' -R '$USERNAME''
fi
#Delete tar temp folder
rm -f -R /home/$HOMETEMPFOLDER
fi
exit $CHANGE_PASS_STATUS

