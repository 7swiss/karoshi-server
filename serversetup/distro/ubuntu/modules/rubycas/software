#!/bin/bash
#softwareinstall
#Check for software


RUBYCASPATH=/var/lib/gems/1.8/gems/rubycas-server-1.1.0/public
UPDATEREPOSITORY=yes


function update_repository {
echo "<li>"Updating repository list"</li><br>"
echo
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
apt-get update
echo '</pre>'
}

dpkg -S rubygems1.8 1>/dev/null
if [ `echo $?` != 0 ]
then
[ $UPDATEREPOSITORY = yes ] && update_repository
UPDATEREPOSITORY=no
echo "<li>"Installing rubygems1.8"</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
apt-get install -y rubygems1.8
echo '</pre>'
fi

dpkg -S libapache2-mod-passenger 1>/dev/null
if [ `echo $?` != 0 ]
then
[ $UPDATEREPOSITORY = yes ] && update_repository
UPDATEREPOSITORY=no
echo "<li>"Installing libapache2-mod-passenger"</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
apt-get install -y libapache2-mod-passenger
echo '</pre>'
fi

dpkg -S libmysql-ruby 1>/dev/null
if [ `echo $?` != 0 ]
then
[ $UPDATEREPOSITORY = yes ] && update_repository
UPDATEREPOSITORY=no
echo "<li>"Installing libmysql-ruby"</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
apt-get install -y libmysql-ruby
echo '</pre>'
fi

dpkg -S php5-curl 1>/dev/null
if [ `echo $?` != 0 ]
then
[ $UPDATEREPOSITORY = yes ] && update_repository
UPDATEREPOSITORY=no
echo "<li>"Installing php5-curl"</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
apt-get install -y php5-curl
echo '</pre>'
fi

dpkg -S libopenssl-ruby1.8 1>/dev/null
if [ `echo $?` != 0 ]
then
[ $UPDATEREPOSITORY = yes ] && update_repository
UPDATEREPOSITORY=no
echo "<li>"Installing libopenssl-ruby1.8"</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
apt-get install -y libopenssl-ruby1.8
echo '</pre>'
fi

if [ ! -f /var/lib/gems/1.8/bin/rubycas-server ]
then
echo "<li>"Installing rubycas-server - This will take some time please wait."</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
gem install rubycas-server
echo '</pre>'
fi
if [ ! -d /var/lib/gems/1.8/gems/ruby-net-ldap-0.0.4 ]
then
echo "<li>"Installing ruby-net-ldap - This will take some time please wait."</li><br>"
echo '<pre style="font-size: 10pt; font-family:Arial, Times, Georgia, serif">'
gem install ruby-net-ldap
echo '</pre>'
fi

###############################
#Create log file
###############################
touch /var/log/casserver.log
chown -c nobody.root /var/log/casserver.log 1>/dev/null
chmod 0660 /var/log/casserver.log
##############################
#Copy in config file
##############################
echo "<li>"Copying config.yml to /etc/rubycas-server"</li><br>"
[ ! -d /etc/rubycas-server ] && mkdir -p /etc/rubycas-server
cp -f /opt/karoshi/serversetup/modules/rubycas/config.yml /etc/rubycas-server
chown -c nobody.root /etc/rubycas-server/config.yml 1>/dev/null
chmod 0440 /etc/rubycas-server/config.yml

###############################
#Configure apache
##############################

#Get apache to work on port 444
if [ `grep -c ^'#cas' /etc/apache2/ports.conf` = 0 ]
then
echo >> /etc/apache2/ports.conf
echo '<IfModule mod_ssl.c>' >> /etc/apache2/ports.conf
echo '#cas' >> /etc/apache2/ports.conf
echo 'Listen 444' >> /etc/apache2/ports.conf
echo '</IfModule>' >> /etc/apache2/ports.conf
echo >> /etc/apache2/ports.conf
fi

#Add port 444
cp -f /opt/karoshi/serversetup/distro/ubuntu/modules/rubycas/cas-ssl /etc/apache2/sites-enabled

#Below used to work but currently does not redirect correctly

#[ ! -L /var/www/html/cas ] && ln -s $RUBYCASPATH /var/www/html/cas

#if [ `grep -c PassengerResolveSymlinksInDocumentRoot /etc/apache2/sites-enabled/default-ssl` = 0 ]
#then
#echo "<li>"Modifying Apache on port 443 to "enable" Ruby Cas"</li><br>"
#LINECOUNT=`cat /etc/apache2/sites-enabled/default-ssl | wc -l`
#let LINECOUNT1=$LINECOUNT-1
#sed -i ''$LINECOUNT1','$LINECOUNT'd' /etc/apache2/sites-enabled/default-ssl

#echo RailsAutoDetect off >> /etc/apache2/sites-enabled/default-ssl
#echo PassengerResolveSymlinksInDocumentRoot on >> /etc/apache2/sites-enabled/default-ssl
#echo RackBaseURI /cas >> /etc/apache2/sites-enabled/default-ssl
#echo "<Directory /var/www/html/cas>" >> /etc/apache2/sites-enabled/default-ssl
#echo 	RackBaseURI /cas >> /etc/apache2/sites-enabled/default-ssl
#echo 	PassengerResolveSymlinksInDocumentRoot on >> /etc/apache2/sites-enabled/default-ssl
#echo    Options -MultiViews >> /etc/apache2/sites-enabled/default-ssl
#echo "</Directory>" >> /etc/apache2/sites-enabled/default-ssl
#echo "</VirtualHost>" >> /etc/apache2/sites-enabled/default-ssl
#echo "</IfModule>"  >> /etc/apache2/sites-enabled/default-ssl
#fi
exit


