#!/usr/bin/expect -f
# Expect script to supply root/admin password for remote ssh server
# and execute command.
# This script needs three argument to(s) connect to remote server:
# password = Password of remote UNIX server, for root user.
# ipaddr = IP Addreess of remote UNIX server, no hostname
# scriptname = Path to remote script which will execute on remote server
# For example:
#  ./sshlogin.exp password 192.168.1.11 who
# ------------------------------------------------------------------------
# Copyright (c) 2004 nixCraft project <http://cyberciti.biz/fb/>
# This script is licensed under GNU GPL version 2.0 or above
# -------------------------------------------------------------------------
# This script is part of nixCraft shell script collection (NSSC)
# Visit http://bash.cyberciti.biz/ for more information.
# ----------------------------------------------------------------------
# set Variables
set password [lrange $argv 0 0]
set country [lrange $argv 1 1]
set state [lrange $argv 2 2]
set city [lrange $argv 3 3]
set organistationname [lrange $argv 4 4]
set commonname [lrange $argv 5 5]
set email [lrange $argv 6 6]
set organistation [lrange $argv 7 7]

set timeout -1
spawn openssl req -new -key server.key -out server.csr
match_max 100000
# Look for password prompt
expect "*?server.key:*"
# Send password aka $password
send -- "$password\r"

#Country
expect "*?Country Name*"
send -- "$country\r"

#State
expect "*?State or Province Name*"
send -- "$state\r"

#City
expect "*?Locality Name*"
send -- "$city\r"

#Organisation Name
expect "*?Organization Name*"
send -- "$organistation\r"

#Organizational Unit Name
expect "*?Organizational Unit Name*"
send -- "$organistationname\r"

#Common Name
expect "*?Common Name*"
send -- "$commonname\r"

#Email Address
expect "*?Email Address*"
send -- "\r"

#A challenge password
expect "*?A challenge password*"
send -- "\r"

#An optional company name
expect "*?An optional company name*"
send -- "\r"

send -- "\r"
expect eof





