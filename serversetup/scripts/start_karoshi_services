#!/bin/bash
#start_karoshi_services
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/all/boot_command
[ -d /opt/karoshi/start_on_boot/ ] || mkdir /opt/karoshi/start_on_boot/
touch /opt/karoshi/start_on_boot/karoshi_boot_log
##########################
#dependancies
##########################
#/opt/karoshi/start_on_boot/karoshi_services
#Contains a list of services that this server should run on boot followed by the level
#Example:
#smb,1
#dhcp-server,3
#Levels are 1 - run if this is acting as the main server, 2 - run if this server has stood down , 3 - run at in either mode
#/opt/karoshi/start_on_boot/karoshi_server_name
#Contains the server name for this server - this is needed in case this server is part of a redundant server setup
#Starts all services needed by Karoshi from the karoshi_services file on boot
##########################
#Karoshi_boot_log check
##########################
LOGSIZE=`wc -c /opt/karoshi/start_on_boot/karoshi_boot_log | cut -d" " -f1`
if [ $LOGSIZE -gt 100000 ]
then
[ -f /opt/karoshi/start_on_boot/karoshi_boot_log4 ] && rm -f /opt/karoshi/start_on_boot/karoshi_boot_log4
[ -f /opt/karoshi/start_on_boot/karoshi_boot_log3 ] && mv /opt/karoshi/start_on_boot/karoshi_boot_log3 /opt/karoshi/start_on_boot/karoshi_boot_log4
[ -f /opt/karoshi/start_on_boot/karoshi_boot_log2 ] && mv /opt/karoshi/start_on_boot/karoshi_boot_log2 /opt/karoshi/start_on_boot/karoshi_boot_log3
[ -f /opt/karoshi/start_on_boot/karoshi_boot_log1 ] && mv /opt/karoshi/start_on_boot/karoshi_boot_log1 /opt/karoshi/start_on_boot/karoshi_boot_log2
mv /opt/karoshi/start_on_boot/karoshi_boot_log /opt/karoshi/start_on_boot/karoshi_boot_log1
fi
echo '####################################################' >> /opt/karoshi/start_on_boot/karoshi_boot_log
date >> /opt/karoshi/start_on_boot/karoshi_boot_log
##########################
#Checks
##########################
if [ ! -f /opt/karoshi/start_on_boot/karoshi_services ]
then
echo karoshi_services file does not exist >> /opt/karoshi/start_on_boot/karoshi_boot_log
exit
fi
if [ ! -f /opt/karoshi/start_on_boot/karoshi_server_name ]
then
echo karoshi_server_name file does not exist >> /opt/karoshi/start_on_boot/karoshi_boot_log
exit
fi
if [ $DISTROCHOICE'null' = null ]
then
echo DISTROCHOICE has not been assigned >> /opt/karoshi/start_on_boot/karoshi_boot_log
exit
fi

BOOT_COMMAND_NOSPACES=`echo $BOOT_COMMAND | sed 's/ //g'`
if [ $BOOT_COMMAND_NOSPACES'null' = null ]
then
echo BOOT_COMMAND has not been assigned >> /opt/karoshi/start_on_boot/karoshi_boot_log
exit
fi
#Check to see if this server is a main server and not a redundant spare
#Not in active duty
KAROSHI_STATUS=2
if test -f /opt/karoshi/start_on_boot/karoshi_server_name
then
KAROSHI_SERVER_NAME=`hostname`
if [ `grep $KAROSHI_SERVER_NAME -c -w /opt/karoshi/start_on_boot/karoshi_server_name` = 1 ]
then
#Main server active duty
KAROSHI_STATUS=1
fi
fi
echo Karoshi boot status is $KAROSHI_STATUS >> /opt/karoshi/start_on_boot/karoshi_boot_log 
##########################
#Start services listed in karoshi_services
##########################
KAROSHI_SERVICE_LIST=( `cat /opt/karoshi/start_on_boot/karoshi_services` )
KAROSHI_SERVICE_COUNT=`echo ${#KAROSHI_SERVICE_LIST[@]}`
COUNTER=0
while [ $COUNTER -lt $KAROSHI_SERVICE_COUNT ]
do
KAROSHI_SERVICE_LEVEL=`echo ${KAROSHI_SERVICE_LIST[$COUNTER]} | cut -d, -f2`
KAROSHI_SERVICE=`echo ${KAROSHI_SERVICE_LIST[$COUNTER]} | cut -d, -f1`
if [ $KAROSHI_STATUS = $KAROSHI_SERVICE_LEVEL ] || [ $KAROSHI_SERVICE_LEVEL = 3 ]
then
if [ `ps -e | grep -c -w $KAROSHI_SERVICE` = 0 ]
then
echo starting $KAROSHI_SERVICE level $KAROSHI_SERVICE_LEVEL >> /opt/karoshi/start_on_boot/karoshi_boot_log 
$BOOT_COMMAND$KAROSHI_SERVICE start 2>> /opt/karoshi/start_on_boot/karoshi_boot_log
fi
fi
let COUNTER=$COUNTER+1
done
exit
