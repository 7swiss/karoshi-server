#!/bin/bash
CDROMPATH=$HOME/serversetup
source $CDROMPATH/essentials/language/englishuk


##################
#Test to see if dialog is supported
##################
dialog 1>$HOME/.tempdata/dialogtxt 2>$HOME/.tempdata/dialogtxt
SUPPORTDIALOG=`sed -n 1,1p $HOME/.tempdata/dialogtxt | cut -d' ' -f1`

rm -f $HOME/.tempdata/dialogtxt

if [ $SUPPORTDIALOG = cdialog ]
then 
DIALOG=${DIALOG=dialog}
tempfile=`tempfile 2>/dev/null` || tempfile=$HOME/.tempdata/menuchoice
trap "rm -f $tempfile" 0 1 2 5 15
dialog --title "$ROOTTITLE" \
 --menu "$ROOTWARNINGMSG" 20 50 4 \
 "$KUBUNTUMSG1" "$KUBUNTUMSG2" \
 "$LOGOUTMSG1" "$LOGOUTMSG2" \
 "$EXITMSG1" "$EXITMSG2" 2> $tempfile

retval=$?

choice=`cat $tempfile`
 
case $retval in
0)
CHOICE=$choice;;
1)
CHOICE=n;;
255)
CHOICE=n;;
esac

if [ $CHOICE = Logout ]
then
dcop kdesktop KDesktopIface logout
CHOICE=n
fi

if [ $CHOICE = Exit ]
then
CHOICE=n
fi

if [ $CHOICE = n ]
then
dialog --title "$TITLE" \
 --msgbox "$EXITMSG3" 16 50
case $? in
0)
exit ;;
255)
exit ;;
esac
exit
fi

function getpassword {
DIALOG=${DIALOG=dialog}
tempfile=`tempfile 2>/dev/null` || tempfile=$HOME/.tempdata/password1
#trap "rm -f $tempfile" 0 1 2 5 15

$DIALOG --title "$TITLE" --clear \
       --icon $ICON --rc-file $RCFILE --passwordbox "$ROOTPASSMSG1" 16 50 2> $HOME/.tempdata/password1

retval=$?

case $retval in
  0)
    ;;
  1)
    exit;;
  255)
    if test -s $tempfile ; then
      cat $tempfile
    else
      exit
    fi
    ;;
esac

ROOTPASSWORD=`cat $HOME/.tempdata/password1`
rm -f $HOME/.tempdata/password1
}

function getpassword2 {
DIALOG=${DIALOG=dialog}
tempfile=`tempfile 2>/dev/null` || tempfile=$HOME/.tempdata/password2
#trap "rm -f $tempfile" 0 1 2 5 15

$DIALOG --title "$TITLE" --clear \
       --icon $ICON --rc-file $RCFILE --passwordbox "$ROOTPASSMSG2" 16 50 2> $HOME/.tempdata/password2

retval=$?

case $retval in
  0)
    ;;
  1)
    exit;;
  255)
    if test -s $tempfile ; then
      cat $tempfile
    else
      exit
    fi
    ;;
esac

CHECKROOTPASSWORD=`cat $HOME/.tempdata/password2`
rm -f $HOME/.tempdata/password2
}
######################
#Function Check for typing errors
######################
function checkforerrors {
if [ $ROOTPASSWORD != $CHECKROOTPASSWORD ]
then
dialog --title "$ROOTTITLE2" \
--icon $ICON --rc-file $RCFILE --msgbox "$PASSWORDWARN" 16 50
case $ in
0)
	exit;;
255)
	exit;;
esac
else
clear
fi
}
getpassword
getpassword2
checkforerrors
while [  $ROOTPASSWORD != $CHECKROOTPASSWORD ]
do
getpassword
getpassword2
checkforerrors
done

#####################
#Get sudo user password
#####################

function getpassword3 {
DIALOG=${DIALOG=dialog}
tempfile=`tempfile 2>/dev/null` || tempfile=$HOME/.tempdata/password3
#trap "rm -f $tempfile" 0 1 2 5 15

$DIALOG --title "$TITLE" --clear \
       --icon $ICON --rc-file $RCFILE --passwordbox "$PRIVPASSMSG1" 16 50 2> $HOME/.tempdata/password3

retval=$?

case $retval in
  0)
    ;;
  1)
    exit;;
  255)
    if test -s $tempfile ; then
      cat $tempfile
    else
      exit
    fi
    ;;
esac

USERPASSWORD=`cat $HOME/.tempdata/password3`
rm -f $HOME/.tempdata/password3
}

function getpassword4 {
DIALOG=${DIALOG=dialog}
tempfile=`tempfile 2>/dev/null` || tempfile=$HOME/.tempdata/password4
#trap "rm -f $tempfile" 0 1 2 5 15

$DIALOG --title "$TITLE" --clear \
       --icon $ICON --rc-file $RCFILE --passwordbox "$PRIVPASSMSG2" 16 50 2> $HOME/.tempdata/password4

retval=$?

case $retval in
  0)
    ;;
  1)
    exit;;
  255)
    if test -s $tempfile ; then
      cat $tempfile
    else
      exit
    fi
    ;;
esac

CHECKUSERPASSWORD=`cat $HOME/.tempdata/password4`
rm -f $HOME/.tempdata/password4
}
######################
#Function Check for typing errors
######################
function checkforerrors2 {
if [ $USERPASSWORD != $CHECKUSERPASSWORD ]
then
dialog --title "$ROOTTITLE2" \
--icon $ICON --rc-file $RCFILE --msgbox "$PASSWORDWARN" 16 50
case $ in
0)
	exit;;
255)
	exit;;
esac
else
clear
fi
}
getpassword3
getpassword4
checkforerrors2
while [  $USERPASSWORD != $CHECKUSERPASSWORD ]
do
getpassword3
getpassword4
checkforerrors2
done
else
clear
echo -e "$TEXTMENU1"
read CHOICE
if [ $CHOICE = 1 ]
then
function checkpassword5 {
clear
echo -e "$ROOTPASSMSG1" 
read -s ROOTPASSWORD
clear
echo -e "$ROOTPASSMSG2"
read -s CHECKROOTPASSWORD
}
function checkpassword6 {
clear
echo -e "$PRIVPASSMSG1"
read -s USERPASSWORD
clear
echo -e "$PRIVPASSMSG2"
read -s CHECKUSERPASSWORD
}
checkpassword5
while [  $ROOTPASSWORD != $CHECKROOTPASSWORD ]
do
clear
echo -e "$PASSWORDWARN2"
read pause
checkpassword5
done

checkpassword6
while [  $USERPASSWORD != $CHECKUSERPASSWORD ]
do
clear
echo -e "$PASSWORDWARN3"
read pause
checkpassword6
done

fi
fi

if [ $CHOICE = 2 ]
then
dcop kdesktop KDesktopIface logout
CHOICE=3
fi

if [ $CHOICE = 3 ]
then
echo -e "$EXITMSG4"
exit
fi

######################
#Change root password
######################
sudo -K
sleep 1
echo -e $USERPASSWORD"\n""root:$ROOTPASSWORD" | sudo -S chpasswd
######################
#Check to see if kdm allows root login 
#####################


if [ -e /etc/kde/kdm/kdmrc ]
then
ROOTLOGINSTATUS1=`grep -c AllowRootLogin=false /etc/kde/kdm/kdmrc`
ROOTLOGINSTATUS2=0
fi

if [ -e /etc/kde3/kdm/kdmrc ]
then
ROOTLOGINSTATUS2=`grep -c AllowRootLogin=false /etc/kde3/kdm/kdmrc`
ROOTLOGINSTATUS1=0
fi

######################
#Copy allowrootkdm scripts to tempdata to allow su to work
######################

cp $CDROMPATH/essentials/allowrootkdm $HOME/.tempdata
cp $CDROMPATH/essentials/allowrootkdm3 $HOME/.tempdata
chmod 0755 $HOME/.tempdata/allowrootkdm
chmod 0755 $HOME/.tempdata/allowrootkdm3

######################
#Modify kdmrc file
######################
clear
if [ $ROOTLOGINSTATUS1 -ge 1 ]
then
echo $CHANGEKDEMSG1
su -c $HOME/.tempdata/allowrootkdm
echo Completed
fi

if [ $ROOTLOGINSTATUS2 -ge 1 ]
then
echo $CHANGEKDEMSG1
su -c $HOME/.tempdata/allowrootkdm3
echo Completed
fi

######################
#Remove allowrootkdm scripts
######################

rm -f $HOME/.tempdata/allowrootkdm
rm -f $HOME/.tempdata/allowrootkdm3

#####################
#Display Completed Message
#####################
if [ $SUPPORTDIALOG = cdialog ]
then
dialog --title "$TITLE" \
 --msgbox "$ENDMSG" 16 50
case $? in
0)
exit ;;
255)
exit ;;
esac
exit
else
clear
echo -e "$ENDMSG\n\n$PRESSKEY"
read pause
exit
fi
