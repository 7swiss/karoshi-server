#!/bin/bash
#msifind
#Copyright (C) 2006 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contact either at mpsharrad@karoshi.org.uk or jharris@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
WPKGPATH=/home/wpkg
SERVERNAME=`hostname`
source /opt/karoshi/serversetup/variables/language
source /opt/karoshi/serversetup/variables/xdialog
source /opt/karoshi/serversetup/language/$LANGCHOICE/all/msifind
###################
#Unique session date
###################
DAY=`date +%d`
MONTH=`date +%b`
TIME=`date +%T`
YEAR=`date +%Y`
UNIQUENO=`echo $DAY'_'$MONTH'_'$YEAR'_'$TIME | sed 's/:/_/g'`

PROFILE=default

[ -d $HOME/.tempdata ] || mkdir $HOME/.tempdata

function chooseprofile {
####################
#Choose profile to use
####################
dir --format=single-column $WPKGPATH/software/msi/ > $HOME/.tempdata/profiletemp
sed 's/ //g' $HOME/.tempdata/profiletemp | sed 's/[\]//g' > $HOME/.tempdata/profiletempnospaces
wc -l $HOME/.tempdata/profiletemp > $HOME/.tempdata/numberofprofiles
NUMBEROFPROFILES=`cut $HOME/.tempdata/numberofprofiles -d' ' -f1`
rm -f $HOME/.tempdata/profiles
COUNTER=1
         while [  $COUNTER -le $NUMBEROFPROFILES ]; do
	 
	 PROFILE=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/profiletempnospaces`
             echo $PROFILE . off >> $HOME/.tempdata/profiles
             let COUNTER=COUNTER+1
         done
PROFILES=`cat $HOME/.tempdata/profiles`
rm -f $HOME/.tempdata/numberofprofiles
rm -f $HOME/.tempdata/profile
rm -f $HOME/.tempdata/profiletemp
rm -f $HOME/.tempdata/profiletempnospaces
###########################
#Create checklist box for selection
###########################
DIALOG=${DIALOG=Xdialog}
tempfile=`tempfile 2>/dev/null` || tempfile=$HOME/.tempdata/profilename
trap "rm -f $tempfile" 0 1 2 5 15

$DIALOG --wrap --icon $ICON --rc-file $RCFILE --backtitle "$TITLE" \
        --title "$TITLE4" --clear \
        --check "$NOVERWRITEMSG" --radiolist "$OPENINGMSG\n\n$CHOOSEPROFILEMSG" 40 55 5 \
        $PROFILES 2> $HOME/.tempdata/profilename

retval=$?

PROFILE=`sed 's/[/]/ /g' $HOME/.tempdata/profilename`

case $retval in
  0)
    ;;
  1)
    exit;;
  255)
    exit;;
esac
########################
#Overwrite check
########################
if [ `echo $PROFILE"null" | cut -d " " -f2` = checkednull ]
then
OVERWRITECHECK=yes
else
OVERWRITECHECK=no
fi
PROFILE=`echo $PROFILE | cut -d " " -f1`
[ -d $WPKGPATH/profile/$PROFILE ] || mkdir -p $WPKGPATH/profile/$PROFILE
[ -f $WPKGPATH/profile/$PROFILE/profileexe ] || touch $WPKGPATH/profile/$PROFILE/profileexe
[ -f $WPKGPATH/profile/$PROFILE/profileother ] || touch $WPKGPATH/profile/$PROFILE/profileother
[ -d $WPKGPATH/profile/$PROFILE/packages/msipackagesall ] || mkdir -p $WPKGPATH/profile/$PROFILE/packages/msipackagesall
[ -d $WPKGPATH/profile/$PROFILE/packages/msipackagesadd ] || mkdir -p $WPKGPATH/profile/$PROFILE/packages/msipackagesadd
[ -d $WPKGPATH/profile/$PROFILE/packages/msipackagesremove ] || mkdir -p $WPKGPATH/profile/$PROFILE/packages/msipackagesremove
[ -d $WPKGPATH/profile/$PROFILE/packages/msipackagestemp ] || mkdir -p $WPKGPATH/profile/$PROFILE/packages/msipackagestemp
[ -f $WPKGPATH/profile/$PROFILE/packages/packagesexe.xml ] || touch $WPKGPATH/profile/$PROFILE/packages/packagesexe.xml
[ -f $WPKGPATH/profile/$PROFILE/packages/packagesother.xml ] || touch $WPKGPATH/profile/$PROFILE/packages/packagesother.xml
rm -f -R $WPKGPATH/profile/$PROFILE/packages/msipackagesall/*
}

function errorbox {
Xdialog --title "$TITLE3" \
--wrap --icon $ICON --rc-file $RCFILE --infobox "$ERRORMSG1" 16 50 3000
case $ in
0)
	exit;;
255)
	exit;;
esac
exit
}

function msisearch {
#########################
#Search for msi files
#########################
find $WPKGPATH/software/msi/$PROFILE -maxdepth 4 -type f -name *msi > $HOME/.tempdata/msilist
#########################
#Get MSI Names
#########################
NOOFENTRIES=`wc -l $HOME/.tempdata/msilist | cut -d " " -f1`
if [ $NOOFENTRIES = 0 ]
then
errorbox
fi

ACTION=CHANGEMELATER
PRIORITY=1
COUNTER=1
         while [  $COUNTER -le $NOOFENTRIES ]; do
	 NAMEDEPTH=11
	 PATHDEPTH=10
	 MSIPATH=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/msilist`
	 MSINAME=`ls "$MSIPATH" | cut -d / -f$NAMEDEPTH`
	 	while [ "$MSINAME""null" = null ]; do
	 	let NAMEDEPTH=NAMEDEPTH-1
		let PATHDEPTH=$PATHDEPTH-1
	 	MSINAME=`ls "$MSIPATH" | cut -d / -f$NAMEDEPTH`
	 	done
	 let COUNTER=COUNTER+1
	 #######################
	 #Check name for spaces
	 #######################
	 SPACECHECK=`echo $MSIPATH | grep -c ' '`
	 if [ $SPACECHECK != 0 ]
	 then
	 MSIPATHNOSPACES=`echo $MSIPATH | sed 's/ /_/g'`
	 MSIDIR=`echo $MSIPATH | cut -d / -f1-$PATHDEPTH`
	 MSIDIRNOSPACES=`echo $MSIPATHNOSPACES | cut -d / -f1-$PATHDEPTH`
	 [ -d $MSIPATHNOSPACES ] || mkdir -p $MSIDIRNOSPACES
	 echo command is mv "$MSIPATH" $MSIPATHNOSPACES
	 mv "$MSIPATH" $MSIPATHNOSPACES
	 MSIPATH=`echo $MSIPATHNOSPACES`
	 MSINAME=`echo $MSINAME | sed 's/ /_/g'`
	 fi
	 ########################
	 #Generate Build list
	 ########################
	 WINMSIPATH=`echo '\'$MSIPATH | sed 's/\//\\\/g' | sed 's/home/'$SERVERNAME'/g'`
         #########################
	 #Generate lists
	 #########################
	 echo '<'package > $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo id='"'$MSINAME'_'$UNIQUENO'"' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo name='"'$MSINAME'"' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo revision='"'1'"' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo reboot='"'false'"' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo execute='"'once'"' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo priority='"'$PRIORITY'"''>' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo '<'install cmd='"'msiexec '/'$ACTION $WINMSIPATH '/'q allusers=1'"' '/''>' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
	 echo '<''/'package'>' >> $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
done	
rm -f $HOME/.tempdata/msilist
}
#####################
#Show list of all packages and ask which should be added
#####################
function generatebuildlist {
dir --format=single-column $WPKGPATH/profile/$PROFILE/packages/msipackagesall | sed 's/\\//g'> $HOME/.tempdata/msipackages
NOOFPACKAGES=`wc -l $HOME/.tempdata/msipackages | cut -d " " -f1`
echo '#!/bin/bash' > $HOME/.tempdata/buildlist
echo 'result'='`'Xdialog --wrap --no-cancel --icon $ICON --rc-file $RCFILE --title '"'$TITLE'"' --backtitle '"' '"' '\' >> $HOME/.tempdata/buildlist
echo --stdout --separator '"'"|"'"' '\' >> $HOME/.tempdata/buildlist
echo --buildlist '"'$BACKTITLE1'\n\n'$WPKGPROFILE: $PROFILE'"' 0 0 6 '\' >> $HOME/.tempdata/buildlist

COUNTER=1
while [  $COUNTER -le $NOOFPACKAGES ]; do
	 
	MSIENTRY=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/msipackages`
	#echo '"''"'"'"'"'$MSIENTRY'"'"'"'"''"' '"'$MSIENTRY'"' '"'off'"' '\' >> $HOME/.tempdata/buildlist
	echo '"' $MSIENTRY'"' '"'$MSIENTRY'"' '"'off'"' '\' >> $HOME/.tempdata/buildlist
	let COUNTER=COUNTER+1
	done
echo '`' >> $HOME/.tempdata/buildlist
echo retval='$?' >> $HOME/.tempdata/buildlist
echo 'case' '$'retval 'in' >> $HOME/.tempdata/buildlist
echo '0)' >> $HOME/.tempdata/buildlist
echo ';;' >> $HOME/.tempdata/buildlist
echo '1)' >> $HOME/.tempdata/buildlist
echo 'exit'';;' >> $HOME/.tempdata/buildlist
echo '255)' >> $HOME/.tempdata/buildlist
echo 'exit'';;' >> $HOME/.tempdata/buildlist
echo 'esac' >> $HOME/.tempdata/buildlist
echo 'echo $result' '>' $HOME/.tempdata/msichoicetemp  >> $HOME/.tempdata/buildlist
chmod 0700 $HOME/.tempdata/buildlist
rm -f $HOME/.tempdata/msipackages
}

#######################
#Runs buildlist to get msichoice
#######################
function getmsichoice {
$HOME/.tempdata/buildlist
if ! test -f $HOME/.tempdata/msichoicetemp
then
ERRORMSG1=$ERRORMSG2
errorbox
exit
fi
sed 's/| /\n/g' $HOME/.tempdata/msichoicetemp > $HOME/.tempdata/msichoice
rm -f $HOME/.tempdata/msichoicetemp
rm -f $HOME/.tempdata/buildlist
}

function overwritecheck
{
DIALOG=${DIALOG=Xdialog}

$DIALOG --title "$TITLE" --clear \
        --wrap --icon $ICON --rc-file $RCFILE --yesno "$WPKGPROFILE: $PROFILE\n\n$MSINAME \n\n$OVERWRITEMSG" 16 50

case $? in
  0)
    OVERWRITE=yes;;
  1)
    OVERWRITE=no;;
  255)
    OVERWRITE=no;;
esac
}

function winmsiadd {
###################
#Move scripts from msipackagesall to msipackagesadd
###################
NOOFENTRIES=`wc -l $HOME/.tempdata/msichoice | cut -d " " -f1`
rm -f -R $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/*
COUNTER=1
	while [  $COUNTER -le $NOOFENTRIES ]; do
		MSINAME=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/msichoice`
		MSINAMENOSPACES=`echo $MSINAME | sed 's/ //g'` 
		if [ $MSINAMENOSPACES'null' != null ]
		then 
		OVERWRITE=yes
		if test -f $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/"$MSINAME"
		then
			overwritecheck
		fi
		if test -f $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/"$MSINAME"
		then
			rm -f $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/"$MSINAME"
		fi
		if [ $OVERWRITE = yes ]
		then
			cat $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME" | sed 's/CHANGEMELATER/i/g' > $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/"$MSINAME"
		else
		cp $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/"$MSINAME" $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/"$MSINAME" 
		fi
		rm -f $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
		fi
		let COUNTER=COUNTER+1
	done
if [ $OVERWRITECHECK = yes ]
then
rm -f -R $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/*
fi
mv $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/* $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/ 2>/dev/null

rm -f $HOME/.tempdata/msichoice

}

function winmsiremove {
###################
#Move scripts from msipackagesall to msipackagesremove
################### 
NOOFENTRIES=`wc -l $HOME/.tempdata/msichoice | cut -d " " -f1`
COUNTER=1
	while [  $COUNTER -le $NOOFENTRIES ]; do
		MSINAME=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/msichoice`
		MSINAMENOSPACES=`echo $MSINAME | sed 's/ //g'` 
		if [ $MSINAMENOSPACES"null" != null ]
		then 
		OVERWRITE=yes
		if test -f $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/"$MSINAME"
		then
			overwritecheck
		fi
		if test -f $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/"$MSINAME"
		then
			rm -f $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/"$MSINAME"
		fi
		if [ $OVERWRITE = yes ]
		then
			cat $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME" | sed 's/CHANGEMELATER/x/g' > $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/"$MSINAME"
		else
		cp $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/"$MSINAME" $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/"$MSINAME"
		fi
		rm -f $WPKGPATH/profile/$PROFILE/packages/msipackagesall/"$MSINAME"
		fi
		let COUNTER=COUNTER+1
	done

if [ $OVERWRITECHECK = yes ]
then
rm -f -R $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/*
fi
mv $WPKGPATH/profile/$PROFILE/packages/msipackagestemp/* $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/ 2>/dev/null
rm -f $HOME/.tempdata/msichoice
}

function generateprofile {
dir --format=single-column $WPKGPATH/profile/$PROFILE/packages/msipackagesadd > $HOME/.tempdata/msipackagesadd
echo '<'profile id='"'$PROFILE'"''>' > $WPKGPATH/profile/$PROFILE/profilemsi
NOOFENTRIES=`wc -l $HOME/.tempdata/msipackagesadd | cut -d " " -f1`
COUNTER=1
	while [  $COUNTER -le $NOOFENTRIES ]; do
	MSINAME=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/msipackagesadd`
	echo '<'package package-id='"'$MSINAME'_'$UNIQUENO'"' "/"'>' >> $WPKGPATH/profile/$PROFILE/profilemsi
	let COUNTER=COUNTER+1
	done
rm -f $HOME/.tempdata/msipackagesadd

dir --format=single-column $WPKGPATH/profile/$PROFILE/packages/msipackagesremove > $HOME/.tempdata/msipackagesremove
NOOFENTRIES=`wc -l $HOME/.tempdata/msipackagesremove | cut -d " " -f1`
COUNTER=1
	while [  $COUNTER -le $NOOFENTRIES ]; do
	MSINAME=`sed -n $COUNTER,$COUNTER'p' $HOME/.tempdata/msipackagesremove`
	echo '<'package package-id='"'$MSINAME'_'$UNIQUENO'"' '/''>' >> $WPKGPATH/profile/$PROFILE/profilemsi
	let COUNTER=COUNTER+1
	done
if [ $PROFILE != default ]
then
echo '<'depends profile-id='"'default'"' '/''>' >> $WPKGPATH/profile/$PROFILE/profilemsi
fi
echo '<''/'profile'>' >> $WPKGPATH/profile/$PROFILE/profilemsi
rm -f $HOME/.tempdata/msipackagesremove
}


function generatewpkgfiles {
##################
#Generate packages.xml
##################
echo '<'?xml version='"'1.0'"' encoding='"'UTF-8'"'?'>' > $WPKGPATH/packages.xml
echo '<'packages'>' >> $WPKGPATH/packages.xml
cat $WPKGPATH/profile/$PROFILE/packages/msipackagesadd/* $WPKGPATH/profile/$PROFILE/packages/msipackagesremove/* > $WPKGPATH/profile/$PROFILE/packages/packagesmsi.xml 2>/dev/null
cat $WPKGPATH/profile/*/packages/packagesmsi.xml $WPKGPATH/profile/*/packages/packagesexe.xml $WPKGPATH/profile/*/packages/packagesother.xml >> $WPKGPATH/packages.xml
echo '<'/packages'>' >> $WPKGPATH/packages.xml

##################
#Generate PROFILE.xml
##################

if [ $PROFILE != default ]
then
sed 's/<\/profile>//g' $WPKGPATH/profile/$PROFILE/profilemsi > $HOME/.tempdata/profilemsi1
sed 's/<profile id="default">//g' $HOME/.tempdata/profilemsi1 > $HOME/.tempdata/profilemsi2
sed /^$/d $HOME/.tempdata/profilemsi2 > $WPKGPATH/profile/$PROFILE/profilemsi
echo '<''/'profile'>' >> $WPKGPATH/profile/$PROFILE/profilemsi
rm -f $HOME/.tempdata/profilemsi1
rm -f $HOME/.tempdata/profilemsi2
fi
echo '<'profiles'>' > $WPKGPATH/profiles.xml
cat $WPKGPATH/profile/*/profilemsi $WPKGPATH/profile/*/profileexe $WPKGPATH/profile/*/profileother >> $WPKGPATH/profiles.xml
echo '<''/'profiles'>' >> $WPKGPATH/profiles.xml
}

function completedbox {
Xdialog --title "$TITLE4" \
--wrap --icon $ICON --rc-file $RCFILE --infobox "$WPKGPROFILE: $PROFILE\n\n$TITLE4\n\n$COMPLETEDMSG" 16 50 3000
case $ in
0)
	;;
255)
	;;
esac
}
chooseprofile
msisearch
generatebuildlist
getmsichoice
winmsiadd
TITLE=$TITLE2
BACKTITLE1=$BACKTITLE2
generatebuildlist
if [ $NOOFPACKAGES != 0 ]
then
getmsichoice
winmsiremove
else
if [ $PROFILE != default ]
then
cat $WPKGPATH/profile/default/profilemsi >> $WPKGPATH/profile/$PROFILE/profilemsi
fi
fi
generateprofile


####################
#Confirm selection
####################
if [ $NOOFPACKAGES = 0 ]
then
REMOVEPACKAGES=""
fi
echo $WPKGPROFILE: $PROFILE > $HOME/.tempdata/msilist
echo >> $HOME/.tempdata/msilist
echo $ADDPACKAGES >> $HOME/.tempdata/msilist
echo >> $HOME/.tempdata/msilist
dir --format=single-column $WPKGPATH/profile/$PROFILE/packages/msipackagesadd | sed 's/\\//g' >> $HOME/.tempdata/msilist
echo >> $HOME/.tempdata/msilist
echo $REMOVEPACKAGES >> $HOME/.tempdata/msilist
echo >> $HOME/.tempdata/msilist
dir --format=single-column $WPKGPATH/profile/$PROFILE/packages/msipackagesremove | sed 's/\\//g' >> $HOME/.tempdata/msilist

cat $HOME/.tempdata/msilist | expand >> $HOME/.tempdata/textbox.tmp
Xdialog --wrap --icon $ICON --rc-file $RCFILE --title="$TITLE4" --textbox "$HOME/.tempdata/textbox.tmp" 22 50

case $? in
0)
CHOICE=go;;
1)
CHOICE=stop;;
255)
CHOICE=stop;;
esac
rm -f $HOME/.tempdata/msilist
rm -f $HOME/.tempdata/textbox.tmp
rm -f $HOME/.tempdata/buildlist
if [ $CHOICE = go ]
then
generatewpkgfiles
completedbox
else
COMPLETEDMSG=$CANCELLEDMSG
completedbox
fi

exit