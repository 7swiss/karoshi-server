#!/bin/bash
#setupsamba
#Copyright (C) 2004  Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aloughlin@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk
[ -d /opt/karoshi/.tempdata ] || mkdir /opt/karoshi/.tempdata

[ -e /opt/karoshi/serversetup/variables/language ] || /opt/karoshi/serversetup/changelanguage
[ -e /opt/karoshi/serversetup/variables/distro ] || /opt/karoshi/serversetup/changedistro

source /opt/karoshi/serversetup/variables/language
source /opt/karoshi/serversetup/variables/xdialog
source /opt/karoshi/serversetup/variables/distro
source /opt/karoshi/serversetup/variables/years
source /opt/karoshi/serversetup/language/$LANGCHOICE/pdc/setupsamba
source /opt/karoshi/serversetup/language/$LANGCHOICE/softwareinstall
source /opt/karoshi/serversetup/distro/$DISTROCHOICE/pdc/software

#########################
#Add log entry
#########################
echo '##############'setupsamba'##############' >> /opt/karoshi/serversetup/install_log
date >> /opt/karoshi/serversetup/install_log
touch /opt/karoshi/serversetup/setuplog
if [ `grep -c "$TITLE" /opt/karoshi/serversetup/setuplog` = 0 ]
then
echo setupsamba:$TITLE:/opt/karoshi/serversetup/pdc/scripts/setupsamba >> /opt/karoshi/serversetup/setuplog
chmod 0600 /opt/karoshi/serversetup/setuplog
fi

THISYEAR=`date +%Y`
GUESTACCOUNTS=30
TECHACCOUNTS=4
EXAMACCOUNTS=40
TRAININGACCOUNTS=30
######################
#Final samba Install check
######################
if ! test -f /etc/init.d/$SMBVER
then
echo /etc/init.d/$SMBVER does not exist >> /opt/karoshi/serversetup/install_log
Xdialog --title "$TITLE" \
--wrap --icon $ICON --rc-file $RCFILE --ok-label "$CONTINUE" --cancel-label "$RERUN" --buttons-style text --yesno "$SMBVER $NOTINSTALLED" 16 50
case $? in
  0)
  exit 101;;
  1)
  exit 102;;
  255)
  exit 101;;
esac
fi
######################
#Final xinetd Install check
######################
if ! test -f /etc/init.d/$XINETDVER
then
echo /etc/init.d/$XINETDVER does not exist >> /opt/karoshi/serversetup/install_log
Xdialog --title "$TITLE" \
--wrap --icon $ICON --rc-file $RCFILE --ok-label "$CONTINUE" --cancel-label "$RERUN" --buttons-style text --yesno "$XINETDVER $NOTINSTALLED" 16 50
case $? in
  0)
  exit 101;;
  1)
  exit 102;;
  255)
  exit 101;;
esac
fi

#######################
#Ensure that samba and xinetd is running on boot
#######################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/samba
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/startonboot/xinetd

#############################
#Copy in security settings
#############################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/pdc/scripts/serverlevelsecurity
##############################
#function Make the folders and groups
##############################
function makefoldersandgroups {
#Make Groups
COUNTER=$STARTYEAR
while [  $COUNTER -le $ENDYEAR ]; do
if [ `grep -c -w yr$COUNTER /etc/group` = 0 ]
then
echo $GROUPADDMSG yr$COUNTER
groupadd -g $COUNTER yr$COUNTER
else
echo $GROUPMODMSG yr$COUNTER
groupmod -g $COUNTER yr$COUNTER
fi
let COUNTER=COUNTER+1
done
if [ `grep -c -w apache_karoshi /etc/group` = 0 ]
then
echo $GROUPADDMSG apache_karoshi
groupadd -g 998 apache_karoshi
else
echo $GROUPMODMSG apache_karoshi
groupmod -g 998 apache_karoshi
fi
if [ `grep -c -w ^karoshi /etc/group` = 0 ]
then
echo $GROUPADDMSG karoshi
groupadd -g 999 karoshi
else
echo $GROUPMODMSG karoshi
groupmod -g 999 karoshi
fi
if [ `grep -c -w staff /etc/group` = 0 ]
then
echo $GROUPADDMSG staff
groupadd -g 1000 staff
else
echo $GROUPMODMSG staff
groupmod -g 1000 staff
fi

if [ `grep -c -w staff2 /etc/group` = 0 ]
then
echo $GROUPADDMSG staff2
groupadd -g 1043 staff2
else
echo $GROUPMODMSG staff2
groupmod -g 1043 staff2
fi
if [ `grep -c -w staff3 /etc/group` = 0 ]
then
echo $GROUPADDMSG staff3
groupadd -g 1044 staff3
else
echo $GROUPMODMSG staff3
groupmod -g 1044 staff3
fi
if [ `grep -c -w staff4 /etc/group` = 0 ]
then
echo $GROUPADDMSG staff4
groupadd -g 1045 staff4
else
echo $GROUPMODMSG staff4
groupmod -g 1045 staff4
fi
if [ `grep -c -w nonteachingstaff /etc/group` = 0 ]
then
echo $GROUPADDMSG nonteachingstaff
groupadd -g 1001 nonteachingstaff
else
echo $GROUPMODMSG nonteachingstaff
groupmod -g 1001 nonteachingstaff
fi
if [ `grep -c -w studentstaff /etc/group` = 0 ]
then
echo $GROUPADDMSG studentstaff
groupadd -g 1002 studentstaff
else
echo $GROUPMODMSG studentstaff
groupmod -g 1002 studentstaff
fi
if [ `grep -c -w guests /etc/group` = 0 ]
then
echo $GROUPADDMSG guests
groupadd -g 1003 guests
else
echo $GROUPMODMSG guests
groupmod -g 1003 guests
fi
if [ `grep -c -w exams /etc/group` = 0 ]
then
echo $GROUPADDMSG exams
groupadd -g 1004 exams
else
echo $GROUPMODMSG exams
groupmod -g 1004 exams
fi
if [ `grep -c -w itadmin /etc/group` = 0 ]
then
echo $GROUPADDMSG itadmin
groupadd -g 1005 itadmin
else
echo $GROUPMODMSG itadmin
groupmod -g 1005 itadmin
fi
if [ `grep -c -w tech /etc/group` = 0 ]
then
echo $GROUPADDMSG tech
groupadd -g 1006 tech
else
echo $GROUPMODMSG tech
groupmod -g 1006 tech
fi
if [ `grep -c -w officestaff /etc/group` = 0 ]
then
echo $GROUPADDMSG officestaff
groupadd -g 1007 officestaff
else
echo $GROUPMODMSG officestaff
groupmod -g 1007 officestaff
fi
if [ `grep -c -w profileuser /etc/group` = 0 ]
then
echo $GROUPADDMSG profileuser
groupadd -g 1008 profileuser
else
echo $GROUPMODMSG profileuser
groupmod -g 1008 profileuser
fi
if [ `grep -c -w work_exp /etc/group` = 0 ]
then
echo $GROUPADDMSG work_exp
groupadd -g 1009 work_exp
else
echo $GROUPMODMSG work_exp
groupmod -g 1009 work_exp
fi
if [ `grep -c -w art /etc/group` = 0 ]
then
echo $GROUPADDMSG art
groupadd -g 1010 art
else
echo $GROUPMODMSG art
groupmod -g 1010 art
fi
if [ `grep -c -w business /etc/group` = 0 ]
then
echo $GROUPADDMSG business
groupadd -g 1011 business
else
echo $GROUPMODMSG business
groupmod -g 1011 business
fi
if [ `grep -c -w careers /etc/group` = 0 ]
then
echo $GROUPADDMSG careers
groupadd -g 1012 careers
else
echo $GROUPMODMSG careers
groupmod -g 1012 careers
fi
if [ `grep -c -w childcare /etc/group` = 0 ]
then
echo $GROUPADDMSG childcare
groupadd -g 1013 childcare
else
echo $GROUPMODMSG childcare
groupmod -g 1013 childcare
fi
if [ `grep -c -w citizenship /etc/group` = 0 ]
then
echo $GROUPADDMSG citizenship
groupadd -g 1014 citizenship
else
echo $GROUPMODMSG citizenship
groupmod -g 1014 citizenship
fi
if [ `grep -c -w drama /etc/group` = 0 ]
then
echo $GROUPADDMSG drama
groupadd -g 1015 drama
else
echo $GROUPMODMSG drama
groupmod -g 1015 drama
fi
if [ `grep -c -w english /etc/group` = 0 ]
then
echo $GROUPADDMSG english
groupadd -g 1016 english
else
echo $GROUPMODMSG english
groupmod -g 1016 english
fi
if [ `grep -c -w french /etc/group` = 0 ]
then
echo $GROUPADDMSG french
groupadd -g 1017 french
else
echo $GROUPMODMSG french
groupmod -g 1017 french
fi
if [ `grep -c -w geography /etc/group` = 0 ]
then
echo $GROUPADDMSG geography
groupadd -g 1018 geography
else
echo $GROUPMODMSG geography
groupmod -g 1018 geography
fi
if [ `grep -c -w german /etc/group` = 0 ]
then
echo $GROUPADDMSG german
groupadd -g 1019 german
else
echo $GROUPMODMSG german
groupmod -g 1019 german
fi
if [ `grep -c -w health_and_soc /etc/group` = 0 ]
then
echo $GROUPADDMSG health_and_soc
groupadd -g 1020 health_and_soc
else
echo $GROUPMODMSG health_and_soc
groupmod -g 1020 health_and_soc
fi
if [ `grep -c -w history /etc/group` = 0 ]
then
echo $GROUPADDMSG history
groupadd -g 1021 history
else
echo $GROUPMODMSG history
groupmod -g 1021 history
fi
if [ `grep -c -w ict /etc/group` = 0 ]
then
echo $GROUPADDMSG ict
groupadd -g 1022 ict
else
echo $GROUPMODMSG ict
groupmod -g 1022 ict
fi
if [ `grep -c -w leisure_and_t /etc/group` = 0 ]
then
echo $GROUPADDMSG leisure_and_t
groupadd -g 1023 leisure_and_t
else
echo $GROUPMODMSG leisure_and_t
groupmod -g 1023 leisure_and_t
fi
if [ `grep -c -w literacy /etc/group` = 0 ]
then
echo $GROUPADDMSG literacy
groupadd -g 1024 literacy
else
echo $GROUPMODMSG literacy
groupmod -g 1024 literacy
fi
if [ `grep -c -w mathematics /etc/group` = 0 ]
then
echo $GROUPADDMSG mathematics
groupadd -g 1025 mathematics
else
echo $GROUPMODMSG mathematics
groupmod -g 1025 mathematics
fi
if [ `grep -c -w media /etc/group` = 0 ]
then
echo $GROUPADDMSG media
groupadd -g 1026 media
else
echo $GROUPMODMSG media
groupmod -g 1026 media
fi
if [ `grep -c -w mediatemp /etc/group` = 0 ]
then
echo $GROUPADDMSG mediatemp
groupadd -g 1027 mediatemp
else
echo $GROUPMODMSG mediatemp
groupmod -g 1027 mediatemp
fi
if [ `grep -c -w music /etc/group` = 0 ]
then
echo $GROUPADDMSG music
groupadd -g 1028 music
else
echo $GROUPMODMSG music
groupmod -g 1028 music
fi
if [ `grep -c -w olc /etc/group` = 0 ]
then
echo $GROUPADDMSG olc
groupadd -g 1029 olc
else
echo $GROUPMODMSG olc
groupmod -g 1029 olc
fi
if [ `grep -c -w physical_edu /etc/group` = 0 ]
then
echo $GROUPADDMSG physical_edu
groupadd -g 1030 physical_edu
else
echo $GROUPMODMSG physical_edu
groupmod -g 1030 physical_edu
fi
if [ `grep -c -w science /etc/group` = 0 ]
then
echo $GROUPADDMSG science
groupadd -g 1031 science
else
echo $GROUPMODMSG science
groupmod -g 1031 science
fi
if [ `grep -c -w spanish /etc/group` = 0 ]
then
echo $GROUPADDMSG spanish
groupadd -g 1032 spanish
else
echo $GROUPMODMSG spanish
groupmod -g 1032 spanish
fi
if [ `grep -c -w technology /etc/group` = 0 ]
then
echo $GROUPADDMSG technolgy
groupadd -g 1033 technology
else
echo $GROUPMODMSG technology
groupmod -g 1033 technology
fi
if [ `grep -c -w temparea /etc/group` = 0 ]
then
echo $GROUPADDMSG temparea
groupadd -g 1034 temparea
else
echo $GROUPMODMSG temparea
groupmod -g 1034 temparea
fi
if [ `grep -c -w bursar /etc/group` = 0 ]
then
echo $GROUPADDMSG bursar
groupadd -g 1035 bursar
else
echo $GROUPMODMSG bursar
groupmod -g 1035 bursar
fi
if [ `grep -c -w smt /etc/group` = 0 ]
then
echo $GROUPADDMSG smt
groupadd -g 1036 smt
else
echo $GROUPMODMSG smt
groupmod -g 1036 smt
fi
if [ `grep -c -w pupiloffice /etc/group` = 0 ]
then
echo $GROUPADDMSG pupileoffice
groupadd -g 1037 pupiloffice
else
echo $GROUPMODMSG pupiloffice
groupmod -g 1037 pupiloffice
fi
if [ `grep -c -w governers /etc/group` = 0 ]
then
echo $GROUPADDMSG governors
groupadd -g 1038 governors
else
echo $GROUPMODMSG governors
groupmod -g 1038 governors
fi
if [ `grep -c -w publications /etc/group` = 0 ]
then
echo $GROUPADDMSG publications
groupadd -g 1039 publications
else
echo $GROUPMODMSG publications
groupmod -g 1039 publications
fi
if [ `grep -c -w studentpublications /etc/group` = 0 ]
then
echo $GROUPADDMSG studentpublications
groupadd -g 1040 studentpublications
else
echo $GROUPMODMSG studentpublications
groupmod -g 1040 studentpublications
fi
if [ `grep -c -w yearbook /etc/group` = 0 ]
then
echo $GROUPADDMSG yearbook
groupadd -g 1041 yearbook
else
echo $GROUPMODMSG yearbook
groupmod -g 1041 yearbook
fi
if [ `grep -c -w guardians /etc/group` = 0 ]
then
echo $GROUPADDMSG guardians
groupadd -g 1042 guardians
else
echo $GROUPMODMSG guardians
groupmod -g 1042 guardians
fi

echo $CREATEHOMEFOLDERSMSG
#Make top level user area
chmod 0755 /home
chown root.root /home
[ -d /home/users ] || mkdir /home/users
chmod 0755 /home/users
chown root.root /home/users
#Student users home areas
[ -d /home/users/students ] || mkdir /home/users/students
chmod 0755 /home/users/students
chown root.root /home/users/students
COUNTER=$STARTYEAR
while [  $COUNTER -le $ENDYEAR ]; do
[ -d /home/users/students/yr$COUNTER ] || mkdir /home/users/students/yr$COUNTER
chmod 0750 /home/users/students/yr$COUNTER
chown root.yr$COUNTER /home/users/students/yr$COUNTER
chown .yr$COUNTER -R /home/users/students/yr$COUNTER
let COUNTER=COUNTER+1
done
#Staff users home areas
[ -d /home/users/staff ] || mkdir /home/users/staff
chmod 0750 /home/users/staff
chown root.staff /home/users/staff
chown .staff -R /home/users/staff
#Staff2 users home areas
[ -d /home/users/staff2 ] || mkdir /home/users/staff2
chmod 0750 /home/users/staff2
chown root.staff /home/users/staff2
chown .staff -R /home/users/staff2
#Staff3 users home areas
[ -d /home/users/staff3 ] || mkdir /home/users/staff3
chmod 0750 /home/users/staff3
chown root.staff /home/users/staff3
chown .staff -R /home/users/staff3
#Staff4 users home areas
[ -d /home/users/staff4] || mkdir /home/users/staff4
chmod 0750 /home/users/staff4
chown root.staff /home/users/staff4
chown .staff -R /home/users/staff4
#Staff2 users home areas
[ -d /home/users/staff2 ] || mkdir /home/users/staff2
chmod 0750 /home/users/staff2
chown root.staff /home/users/staff2
chown .staff -R /home/users/staff2
#Staff3 users home areas
[ -d /home/users/staff3 ] || mkdir /home/users/staff3
chmod 0750 /home/users/staff3
chown root.staff /home/users/staff3
chown .staff -R /home/users/staff3
#Staff4 users home areas
[ -d /home/users/staff4 ] || mkdir /home/users/staff4
chmod 0750 /home/users/staff4
chown root.staff /home/users/staff4
chown .staff -R /home/users/staff4

#Studentstaff users home areas
[ -d /home/users/studentstaff ] || mkdir /home/users/studentstaff
chmod 0750 /home/users/studentstaff
chown root.studentstaff /home/users/studentstaff
chown .studentstaff -R /home/users/studentstaff

#Guardian users home areas
[ -d /home/users/guardians ] || mkdir /home/users/guardians
chmod 0750 /home/users/guardians
chown root.guardians /home/users/guardians
chown .guardians -R /home/users/guardians

#Governor users home areas
[ -d /home/users/governors ] || mkdir /home/users/governors
chmod 0750 /home/users/governors
chown root.governors /home/users/governors
chown .governors -R /home/users/governors

#Non teaching staff users home areas
[ -d /home/users/nonteachingstaff ] || mkdir /home/users/nonteachingstaff
chmod 0750 /home/users/nonteachingstaff
chown root.nonteachingstaff /home/users/nonteachingstaff
chown .nonteachingstaff -R /home/users/nonteachingstaff
#Office staff users home area
[ -d /home/users/officestaff ] || mkdir /home/users/officestaff
chmod 0750 /home/users/officestaff
chown root.officestaff /home/users/officestaff
chown .officestaff -R /home/users/officestaff
#Tech staff users home area
[ -d /home/users/techstaff ] || mkdir /home/users/techstaff
chmod 0750 /home/users/techstaff
chown root.tech /home/users/techstaff
chown .tech -R /home/users/techstaff
#Itadmin staff users home area
[ -d /home/users/itadminstaff ] || mkdir /home/users/itadminstaff
chmod 0750 /home/users/itadminstaff
chown root.itadmin /home/users/itadminstaff
chown .itadmin -R /home/users/itadminstaff
#Guest users home area
[ -d /home/users/guests ] || mkdir /home/users/guests
chmod 0750 /home/users/guests
chown root.guests /home/users/guests
chown .guests -R /home/users/guests
#Exam users home area
[ -d /home/users/exams ] || mkdir /home/users/exams
chmod 0750 /home/users/exams
chown root.exams /home/users/exams
chown .exams -R /home/users/exams
#Applications area - windows profiles
echo $CREATEFOLDERMSG applications
[ -d /home/applications ] || mkdir /home/applications
if ! test -d /home/applications/backgrounds
then
mkdir /home/applications/backgrounds
cp /opt/karoshi/serversetup/pdc/backgrounds/* /home/applications/backgrounds/
cp /opt/karoshi/serversetup/all/backgrounds/* /home/applications/backgrounds/
fi
#News information for karoshi log in banner
[ -d /home/applications/news ] || mkdir /home/applications/news
if ! test -f /home/applications/news/news.txt
then
echo Welcome to the Karoshi Network > /home/applications/news/news.txt
echo >> /home/applications/news/news.txt
echo http://www.karoshi.org.uk >> /home/applications/news/news.txt
fi
chmod 0664 -R /home/applications
chmod u+X,g+X,o+X -R /home/applications
chown root.itadmin -R /home/applications
#Subjects area
echo $CREATEFOLDERMSG subjects
if ! test -d /home/subjects
then
mkdir /home/subjects /home/subjects/"work experience" /home/subjects/art /home/subjects/"business studies" /home/subjects/careers
mkdir /home/subjects/childcare /home/subjects/citizenship /home/subjects/drama /home/subjects/english /home/subjects/french
mkdir /home/subjects/geography /home/subjects/german /home/subjects/"health and social care" /home/subjects/history
mkdir /home/subjects/ict /home/subjects/"leisure and tourism" /home/subjects/literacy /home/subjects/mathematics /home/subjects/"media studies"
mkdir /home/subjects/music /home/subjects/olc /home/subjects/"physical education" /home/subjects/science /home/subjects/spanish
mkdir /home/subjects/welsh /home/subjects/technology
mkdir /home/subjects/yearbook
fi
chmod 0755 /home/subjects
chmod 2664 -R /home/subjects/*
chmod u+X,g+X,o+X -R  /home/subjects/*
chown root.itadmin /home/subjects
chown -R root.staff /home/subjects/*
chmod 0770 /home/subjects/yearbook
chown -R root.yearbook /home/subjects/yearbook
#Staffshare area
echo $CREATEFOLDERMSG staffshare
[ -d /home/staffshare ] || mkdir /home/staffshare
[ -d /home/staffshare/temp ] || mkdir /home/staffshare/temp
[ -d /home/staffshare/"useful documents" ] || mkdir /home/staffshare/"useful documents"
[ -d /home/staffshare/smt ] || mkdir /home/staffshare/smt
[ -d /home/staffshare/"work experience" ] || mkdir /home/staffshare/"work experience"
[ -d /home/staffshare/art ] || mkdir /home/staffshare/art
[ -d /home/staffshare/"business studies" ] || mkdir /home/staffshare/"business studies"
[ -d /home/staffshare/careers ] || mkdir /home/staffshare/careers
[ -d /home/staffshare/childcare ] || mkdir /home/staffshare/childcare
[ -d /home/staffshare/citizenship ] || mkdir /home/staffshare/citizenship
[ -d /home/staffshare/drama ] || mkdir /home/staffshare/drama
[ -d /home/staffshare/english ] || mkdir /home/staffshare/english
[ -d /home/staffshare/french ] || mkdir /home/staffshare/french
[ -d /home/staffshare/geography ] || mkdir /home/staffshare/geography
[ -d /home/staffshare/german ] || mkdir /home/staffshare/german
[ -d /home/staffshare/"health and social care" ] || mkdir /home/staffshare/"health and social care"
[ -d /home/staffshare/history ] || mkdir /home/staffshare/history
[ -d /home/staffshare/ict ] || mkdir /home/staffshare/ict
[ -d /home/staffshare/"leisure and tourism" ] || mkdir /home/staffshare/"leisure and tourism"
[ -d /home/staffshare/literacy ] || mkdir /home/staffshare/literacy
[ -d /home/staffshare/mathematics ] || mkdir /home/staffshare/mathematics
[ -d /home/staffshare/"media studies" ] || mkdir /home/staffshare/"media studies"
[ -d /home/staffshare/music ] || mkdir /home/staffshare/music
[ -d /home/staffshare/olc ] || mkdir /home/staffshare/olc
[ -d /home/staffshare/"physical education" ] || mkdir /home/staffshare/"physical education"
[ -d /home/staffshare/science ] || mkdir /home/staffshare/science
[ -d /home/staffshare/spanish ] || mkdir /home/staffshare/spanish
[ -d /home/staffshare/welsh ] || mkdir /home/staffshare/welsh
[ -d /home/staffshare/technology ] || mkdir /home/staffshare/technology
chmod 0750 /home/staffshare
chmod 2660 -R /home/staffshare/*
chmod u+X,g+X /home/staffshare/*
chown -R root.staff /home/staffshare
chown root.smt -R /home/staffshare/smt
#Temp area
[ -d /home/temp ] || mkdir -p /home/temp
chown root.temparea /home/temp
chmod 2770 /home/temp
#Officeshare area
echo $CREATEFOLDERMSG officeshare
[ -d /home/officeshare ] || mkdir /home/officeshare
[ -d /home/officeshare/temp ] || mkdir /home/officeshare/temp
[ -d /home/officeshare/bursar ] || mkdir /home/officeshare/bursar
[ -d /home/officeshare/pupiloffice ] || mkdir /home/officeshare/pupiloffice

chmod 2660 -R /home/officeshare
chmod u+X,g+X -R /home/officeshare
chown -R root.officestaff /home/officeshare
chown root.pupiloffice -R /home/officeshare/pupiloffice
chown root.bursar -R /home/officeshare/bursar
#Itadminshare area
echo $CREATEFOLDERMSG itadminshare
[ -d /home/itadminshare ] || mkdir /home/itadminshare
[ -d /home/itadminshare/"bulk user creation"/"input files" ] || mkdir -p /home/itadminshare/"bulk user creation"/"input files"
[ -d /home/itadminshare/documentation ] || mkdir /home/itadminshare/documentation
[ -d /home/itadminshare/temp ] || mkdir /home/itadminshare/temp
[ -d /home/itadminshare/"user data" ] || mkdir /home/itadminshare/"user data"
[ -d /home/itadminshare/other ] || mkdir /home/itadminshare/other

chown root.itadmin -R /home/itadminshare
chmod 0660 -R /home/itadminshare
chmod u+X,g+X -R /home/itadminshare
#Karoshi log area
[ -d /var/log/karoshilogs ] || mkdir /var/log/karoshilogs
chmod 0373 /var/log/karoshilogs
chown root.itadmin -R /var/log/karoshilogs


[ -d /var/lib/samba/netlogon ] || mkdir /var/lib/samba/netlogon
##############################
#Check if STARTYEAR is even, bash is rounding down on decimal places
##############################
let YEARCHECK=STARTYEAR/2
let YEARCHECK=YEARCHECK*2
if [ $YEARCHECK = $STARTYEAR ]
then
let ORACCOUNTER=STARTYEAR
let JOSHUACOUNTER=STARTYEAR+1
else
let ORACCOUNTER=STARTYEAR+1
let JOSHUACOUNTER=STARTYEAR
fi
#############################
#Copy in logon files
#############################
echo $COPYLOGONFILESMSG
[ ! -d /var/lib/samba/netlogon ] || cp -R /var/lib/samba/netlogon /var/lib/samba/netlogon_`date +%s`
cp -R /opt/karoshi/serversetup/pdc/logonscripts/* /var/lib/samba/netlogon/
chmod 0644 /var/lib/samba/netlogon/*
chmod 0660 /var/lib/samba/netlogon/kix/reclassify.bat
chown root.itadmin /var/lib/samba/netlogon/kix/reclassify.bat

#############################
#Modify logon forms to match servername
#############################
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon/logonform.kix
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon/newlogonform.kix
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon/logon.bat
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon/kixtart_install.bat
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon/getdll.bat
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon/kixforms_upgrade.bat
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' /var/lib/samba/netlogon//kix/reclassify.bat

#############################
#make group file information for kixtart windows logon script
#############################
echo exams,$HOSTNAME > /var/lib/samba/netlogon/groups.txt
echo itadmin,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo guests,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo guardians,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo governors,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo nonteachingstaff,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo officestaff,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo profileuser,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo staff,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo staff2,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo staff3,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo staff4,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo studentstaff,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
echo Domain Admins,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt

COUNTER=$STARTYEAR
         while [  $COUNTER -le $ENDYEAR ]; do
		echo yr$COUNTER,$HOSTNAME >> /var/lib/samba/netlogon/groups.txt
		let COUNTER=COUNTER+1
         done

########################
#Add in windows settings
########################
if [ ! -d /var/lib/samba/netlogon/windows_settings/security ]
then
mkdir -p /var/lib/samba/netlogon/windows_settings/security
ln -s /var/lib/samba/netlogon/staffdtsec.kix /var/lib/samba/netlogon/windows_settings/security/staff.kix
ln -s /var/lib/samba/netlogon/staffdtsec.kix /var/lib/samba/netlogon/windows_settings/security/staff2.kix
ln -s /var/lib/samba/netlogon/staffdtsec.kix /var/lib/samba/netlogon/windows_settings/security/staff3.kix
ln -s /var/lib/samba/netlogon/staffdtsec.kix /var/lib/samba/netlogon/windows_settings/security/staff4.kix
ln -s /var/lib/samba/netlogon/officestaffdtsec.kix /var/lib/samba/netlogon/windows_settings/security/officestaff.kix
ln -s /var/lib/samba/netlogon/guestdtsec.kix /var/lib/samba/netlogon/windows_settings/security/guest.kix
ln -s /var/lib/samba/netlogon/techdtsec.kix /var/lib/samba/netlogon/windows_settings/security/tech.kix
ln -s /var/lib/samba/netlogon/examdtsec.kix /var/lib/samba/netlogon/windows_settings/security/exams.kix
ln -s /var/lib/samba/netlogon/itadmindtsec.kix /var/lib/samba/netlogon/windows_settings/security/itadminstaff.kix
ln -s /var/lib/samba/netlogon/staffdtsec.kix /var/lib/samba/netlogon/windows_settings/security/staff.kix

COUNTER=2000
ENDYEAR=2050
while [ $COUNTER -le $ENDYEAR ]
do
ln -s /var/lib/samba/netlogon/studentdtsec.kix /var/lib/samba/netlogon/windows_settings/security/yr$COUNTER.kix
let COUNTER=$COUNTER+1
done
fi

if [ ! -d /var/lib/samba/netlogon/windows_settings/drives ]
then
mkdir -p /var/lib/samba/netlogon/windows_settings/drives
cp -f -R /opt/karoshi/serversetup/pdc/logonscripts/drives/* /var/lib/samba/netlogon/windows_settings/drives/

for DRIVEFILES in /var/lib/samba/netlogon/windows_settings/drives/*
do
DRIVEFILE=`basename "$DRIVEFILES"`
sed -i 's/CHANGETHISHOSTNAME/'$HOSTNAME'/g' "/var/lib/samba/netlogon/windows_settings/drives/$DRIVEFILE"
done 

COUNTER=2000
ENDYEAR=2050
while [ $COUNTER -le $ENDYEAR ]
do
ln -s /var/lib/samba/netlogon/windows_settings/drives/students.kix /var/lib/samba/netlogon/windows_settings/drives/yr$COUNTER.kix
let COUNTER=$COUNTER+1
done
fi



#############################
#make group file information for web management logon information
#############################
source /opt/karoshi/serversetup/variables/years
[ ! -d /opt/karoshi/server_network/group_information ] && mkdir -p /opt/karoshi/server_network/group_information

function make_primary_group_info {
echo SERVER'='$HOSTNAME > /opt/karoshi/server_network/group_information/$PRIMARY_GROUP
echo HOMEPATH'='$HOMEPATH >> /opt/karoshi/server_network/group_information/$PRIMARY_GROUP
echo SUBUNIT'='$SUBUNIT >> /opt/karoshi/server_network/group_information/$PRIMARY_GROUP
echo SECONDARYGROUP'='$SECONDARYGROUP >> /opt/karoshi/server_network/group_information/$PRIMARY_GROUP
echo YEARSUFFIX'='$YEARSUFFIX >> /opt/karoshi/server_network/group_information/$PRIMARY_GROUP
}

PRIMARY_GROUP=guests
SUBUNIT=other
HOMEPATH=/home/users/guests
make_primary_group_info
PRIMARY_GROUP=governors
SUBUNIT=personnel
HOMEPATH=/home/users/governors
make_primary_group_info
PRIMARY_GROUP=guardians
SUBUNIT=trustees
HOMEPATH=/home/users/guardians
make_primary_group_info
PRIMARY_GROUP=staff
SUBUNIT=personnel
HOMEPATH=/home/users/staff
make_primary_group_info
PRIMARY_GROUP=staff2
SUBUNIT=personnel
HOMEPATH=/home/users/staff2
SECONDARYGROUP=staff
make_primary_group_info
PRIMARY_GROUP=staff3
SUBUNIT=personnel
HOMEPATH=/home/users/staff3
SECONDARYGROUP=staff
make_primary_group_info
PRIMARY_GROUP=staff4
SUBUNIT=personnel
HOMEPATH=/home/users/staff4
SECONDARYGROUP=staff
make_primary_group_info
PRIMARY_GROUP=nonteachingstaff
SUBUNIT=personnel
HOMEPATH=/home/users/nonteachingstaff
make_primary_group_info
PRIMARY_GROUP=officestaff
SUBUNIT=personnel
HOMEPATH=/home/users/officestaff
SECONDARYGROUP=staff
make_primary_group_info
PRIMARY_GROUP=studentstaff
SUBUNIT=personnel
HOMEPATH=/home/users/studentstaff
SECONDARYGROUP=""
make_primary_group_info
PRIMARY_GROUP=tech
SUBUNIT=personnel
HOMEPATH=/home/users/techstaff
make_primary_group_info
PRIMARY_GROUP=itadmin
SUBUNIT=personnel
HOMEPATH=/home/users/itadminstaff
SECONDARYGROUP="staff,tech"
make_primary_group_info
COUNTER=$STARTYEAR
SECONDARYGROUP=""
while [ $COUNTER -le $ENDYEAR ]
do
PRIMARY_GROUP=yr$COUNTER
SUBUNIT=students
HOMEPATH=/home/users/students/yr$COUNTER
YEARSUFFIX=${COUNTER:2}
make_primary_group_info
let COUNTER=$COUNTER+1
done

/etc/init.d/$SMBVER stop 1> /dev/null

mkdir /home/multimedia
chmod 0755 /home/multimedia
chown root.itadmin /home/multimedia

rm -f /etc/samba/smb.conf
cp -f /opt/karoshi/serversetup/distro/$DISTROCHOICE/pdc/configfiles/smb.conf /etc/samba/smb.conf
cp -f /opt/karoshi/serversetup/pdc/swat /etc/xinetd.d

EXTRASHARES=`grep -c '\\'[multimedia'\\'] /etc/samba/smb.conf`
if [ $EXTRASHARES = 0 ]
then
echo '['multimedia']' >> /etc/samba/smb.conf
echo '	'path = /home/multimedia >> /etc/samba/smb.conf
echo '	'read only = No >> /etc/samba/smb.conf
echo '	'create mask = 0664 >> /etc/samba/smb.conf
echo '	'directory mask = 0775 >> /etc/samba/smb.conf
echo >> /etc/samba/smb.conf
echo '['internetdata']' >> /etc/samba/smb.conf
echo '	'path = /home/internetdata >> /etc/samba/smb.conf
echo '	'read only = No >> /etc/samba/smb.conf
echo '	'create mask = 0664 >> /etc/samba/smb.conf
echo '	'directory mask = 0775 >> /etc/samba/smb.conf
echo '	'browseable = No >> /etc/samba/smb.conf
fi


sed -i 's/CHANGEHOSTNAME/'$HOSTNAME'/g' /etc/samba/smb.conf

#######################
#Make printers.txt
#######################
if ! test -e /var/lib/samba/netlogon/printers.txt
then
echo '**********************************************************************' > /var/lib/samba/netlogon/printers.txt
echo '*'Printer names must match share names on the printer server >> /var/lib/samba/netlogon/printers.txt
echo '*'Supports a maximum of 10 printers per location >> /var/lib/samba/netlogon/printers.txt
echo '*'List your printers below the start marker >> /var/lib/samba/netlogon/printers.txt
echo '*'Do NOT remove or alter start marker >> /var/lib/samba/netlogon/printers.txt
echo '*' >> /var/lib/samba/netlogon/printers.txt
echo '*'Format: Location,Numberofprinters,Printer1,Printer2,....,DefaultPrinter >> /var/lib/samba/netlogon/printers.txt
echo '*'Example: R101,2,R101_BW,R101_CL,R101_BW >> /var/lib/samba/netlogon/printers.txt
echo '**********************************************************************' >> /var/lib/samba/netlogon/printers.txt
echo >> /var/lib/samba/netlogon/printers.txt
echo --start-- >> /var/lib/samba/netlogon/printers.txt
chmod 0644 /var/lib/samba/netlogon/printers.txt
fi
#######################
#Modify smb.conf with correct allowed ip range
#######################''
cp -f /etc/samba/smb.conf /etc/samba/smbbackup.conf
sed 's/172.30./'$SAMBA_ALLOWED'/g' /etc/samba/smb.conf > /etc/samba/smb.conf1
rm -f /etc/samba/smb.conf
mv /etc/samba/smb.conf1 /etc/samba/smb.conf

#pdbedit -P "bad lockout attempt" -C 4
#pdbedit -P "lockout duration" -C 5
#net groupmap cleanup
#net groupmap add rid=512 ntgroup="Domain Admins" unixgroup=tech
#net groupmap modify ntgroup="Domain Admins" unixgroup=tech type=domain
#net groupmap add ntgroup="guests" unixgroup=guests
#net groupmap add ntgroup="exams" unixgroup=exams
#net groupmap add ntgroup="staff" unixgroup=staff
#net groupmap add ntgroup="itadmin" unixgroup=itadmin
#net groupmap add ntgroup="officestaff" unixgroup=officestaff
#net groupmap add ntgroup="nonteachingstaff" unixgroup=nonteachingstaff
#net groupmap add ntgroup="studentstaff" unixgroup=studentstaff
#net groupmap add ntgroup="smt" unixgroup=smt
#net groupmap add ntgroup="bursar" unixgroup=bursar
#net groupmap add ntgroup="pupiloffice" unixgroup=pupiloffice

#COUNTER=$STARTYEAR
#         while [  $COUNTER -le $ENDYEAR ]; do
#             net groupmap add ntgroup="yr$COUNTER" unixgroup=yr$COUNTER
#             let COUNTER=COUNTER+1
#         done

}


function make_profiles {
###################################
#Copying profiles
###################################
[ -d /home/remastersys ] && rm -f -R /home/remastersys
echo $COPYPROFILEMSG
[ -d /home/applications/profiles ] || mkdir /home/applications/profiles
[ -d /home/applications/profiles/defaultprofile ] || cp -R /opt/karoshi/serversetup/pdc/profiles/defaultprofile /home/applications/profiles/
[ -d /home/applications/profiles/profileuser ] || cp -R /opt/karoshi/serversetup/pdc/profiles/profileuser /home/applications/profiles/
[ -d /home/applications/profiles/default_roaming_profile ] || cp -R /opt/karoshi/serversetup/pdc/profiles/default_roaming_profile /home/applications/profiles/
COUNTER=$STARTYEAR
while [  $COUNTER -le $ENDYEAR ]; do
if [ ! -d /home/applications/profiles/yr$COUNTER ]
then
echo $COPYPROFILEMSG2 yr$COUNTER
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/yr$COUNTER
fi
let COUNTER=COUNTER+1
done
if [ ! -d /home/applications/profiles/guests ]
then
echo $COPYPROFILEMSG2 guests
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/guests
cp -f -R /opt/karoshi/serversetup/pdc/profiles/guests /home/applications/profiles/
fi
if [ ! -d /home/applications/profiles/exams ]
then
echo $COPYPROFILEMSG2 exams
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/exams
rm -f /home/applications/profiles/exams/Desktop/*
fi
if [ ! -d /home/applications/profiles/itadmin ]
then
echo $COPYPROFILEMSG2 itadmin
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/itadmin
cp -f -R /opt/karoshi/serversetup/pdc/profiles/itadmin /home/applications/profiles/
fi
if [ ! -d /home/applications/profiles/staff ]
then
echo $COPYPROFILEMSG2 staff
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/staff
cp -f -R /opt/karoshi/serversetup/pdc/profiles/staff /home/applications/profiles/
fi
if [ ! -d /home/applications/profiles/staff2 ]
then
echo $COPYPROFILEMSG2 staff2
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/staff2
cp -f -R /opt/karoshi/serversetup/pdc/profiles/staff /home/applications/profiles/staff2
fi
if [ ! -d /home/applications/profiles/staff3 ]
then
echo $COPYPROFILEMSG2 staff3
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/staff3
cp -f -R /opt/karoshi/serversetup/pdc/profiles/staff /home/applications/profiles/staff3
fi
if [ ! -d /home/applications/profiles/staff4 ]
then
echo $COPYPROFILEMSG2 staff4
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/staff4
cp -f -R /opt/karoshi/serversetup/pdc/profiles/staff /home/applications/profiles/staff4
fi
if [ ! -d /home/applications/profiles/tech ]
then
echo $COPYPROFILEMSG2 tech
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/tech
cp -f -R /opt/karoshi/serversetup/pdc/profiles/tech /home/applications/profiles/
fi
if [ ! -d /home/applications/profiles/officestaff ]
then
echo $COPYPROFILEMSG2 officestaff
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/officestaff
cp -f -R /opt/karoshi/serversetup/pdc/profiles/officestaff /home/applications/profiles/
fi
if [ ! -d /home/applications/profiles/studentstaff ]
then
echo $COPYPROFILEMSG2 studentstaff
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/studentstaff
cp -f -R /opt/karoshi/serversetup/pdc/profiles/studentstaff /home/applications/profiles/
fi
if [ ! -d /home/applications/profiles/nonteachingstaff ]
then
echo $COPYPROFILEMSG2 nonteachingstaff
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/nonteachingstaff
cp -f -R /opt/karoshi/serversetup/pdc/profiles/nonteachingstaff /home/applications/profiles/
fi
echo $COPYPROFILEMSG2 governors
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/governors
cp -f -R /opt/karoshi/serversetup/pdc/profiles/governors /home/applications/profiles/
echo $COPYPROFILEMSG2 guardians
cp -f -R /home/applications/profiles/defaultprofile /home/applications/profiles/guardians
cp -f -R /opt/karoshi/serversetup/pdc/profiles/guardians /home/applications/profiles/

echo $SETPROFILEPERMSMSG
chown -R root.itadmin /home/applications/profiles
chmod 0664 -R /home/applications/profiles
chmod u+X,g+X,o+X -R /home/applications/profiles
[ -d /home/applications/Shortcuts ] || cp -R /opt/karoshi/serversetup/pdc/Shortcuts /home/applications
chown -R root.itadmin /home/applications/Shortcuts
chmod 0664 -R /home/applications/Shortcuts
chmod u+X,g+X,o+X -R /home/applications/Shortcuts
mkdir /home/users/profileuser
chmod 0600 -R /home/users/profileuser
chmod u+X -R /home/users/profileuser
chmod 0600 -R /home/applications/profiles/profileuser
chmod u+X -R /home/applications/profiles/profileuser
[ -d /home/applications/"profile management" ] || mkdir /home/applications/"profile management"
[ -d /home/applications/"profile management"/"desktop icons" ] || mkdir /home/applications/"profile management"/"desktop icons"
[ -d /home/applications/"profile management"/"start menu" ] || mkdir /home/applications/"profile management"/"start menu"
[ -d /home/applications/"profile management"/"new profile" ] || mkdir /home/applications/"profile management"/"new profile"
chown -R root.itadmin /home/applications/"profile management"
chmod 0660 -R /home/applications/"profile management"
chmod u+X,g+X -R /home/applications/"profile management"
[ -d /var/lib/samba/printers ] || mkdir /var/lib/samba/printers
chown -R root.itadmin /var/lib/samba/printers
chmod 0775 -R /var/lib/samba/printers
chmod 0777 /var/spool/samba
chmod +t /var/spool/samba
[ -d /home/applications/cups_print ] || mkdir /home/applications/cups_print
chmod 0775 /home/applications/cups_print
chown root.tech /home/applications/cups_print

chmod 0444 -R /var/lib/samba/netlogon/*
chmod u+X,g+X,o+X -R /var/lib/samba/netlogon/*
}

echo EXTRASERVERS'='no > /opt/karoshi/serversetup/variables/choice
echo EXTRASERVERCOUNT'='1 >> /opt/karoshi/serversetup/variables/choice

##############################
#Display progress box
##############################
function run_functions {
makefoldersandgroups
make_profiles
getxdialogpid
if [ $XDIALOGPID'null' != null ]
then
kill $XDIALOGPID
fi
}

function show_info {
Xdialog --icon $ICON --rc-file $RCFILE --title "$TITLE" --no-cancel --no-ok --tailbox /opt/karoshi/.tempdata/sambastatus 16 60

case $? in
  0)
;;
  1)
;;
  255)
;;
esac
}
function getxdialogpid {
sleep 1
XDIALOGPID=`ps -C Xdialog -o pid= -o command= | grep /opt/karoshi/.tempdata/sambastatus | sed 's/ //g' | cut -dX -f1`
}

run_functions 1> /opt/karoshi/.tempdata/sambastatus 2>> /opt/karoshi/serversetup/install_log | show_info

###############################
#Get new root samba password
###############################
function getrootsmbpasswd {
SAMBAROOTPASSWORD=`Xdialog --title "$TITLE" --clear \
       --wrap --icon $ICON --rc-file $RCFILE --no-cancel --password --inputbox "$ROOTPASSWDMSG" 16 50 2>&1` 

retval=$?

case $retval in
  0)
    ;;
  1)
    ;;
  255)
    ;;
esac
SAMBAROOTPASSWORD=`echo $SAMBAROOTPASSWORD | sed 's/ //g'`
echo $SAMBAROOTPASSWORD > /opt/karoshi/.tempdata/sambapassword
}

###############################
#Get domain name
###############################
function getdomainname {
SAMBADOMAIN=`Xdialog --title "$TITLE" --clear \
       --wrap --icon $ICON --rc-file $RCFILE --no-cancel --inputbox "$DOMAINNAMEMSG" 16 50 2>&1` 

retval=$?

case $retval in
  0)
    ;;
  1)
    ;;
  255)
    ;;
esac
SAMBADOMAINLOWER=`echo $SAMBADOMAIN | sed 's/ //g' | tr -cd 'A-Za-z0-9'`
SAMBADOMAIN=`echo $SAMBADOMAINLOWER | tr 'a-z' 'A-Z'`
if [ ! -d /opt/karoshi/server_network/domain_information/ ]
then
mkdir -p /opt/karoshi/server_network/domain_information/
chown root.apache_karoshi /opt/karoshi/server_network/domain_information/
chmod 0750 /opt/karoshi/server_network/domain_information/
fi
echo SAMBADOMAIN=$SAMBADOMAIN > /opt/karoshi/server_network/domain_information/domain_name
echo SAMBADOMAINlcase=$SAMBADOMAINLOWER >> /opt/karoshi/server_network/domain_information/domain_name
#Modify samba with correct domain name
sed -i "s/CHANGETHISDOMAINNAME/$SAMBADOMAIN/g" /etc/samba/smb.conf
#Modify kix
sed -i "s/CHANGETHISDOMAINNAME/$SAMBADOMAIN/g" /var/lib/samba/netlogon/logonform.kix
sed -i "s/CHANGETHISDOMAINNAME/$SAMBADOMAIN/g" /var/lib/samba/netlogon/newlogonform.kix
}

#Get domain name
source /opt/karoshi/serversetup/variables/xdialog4
getdomainname
#get samba root password
source /opt/karoshi/serversetup/variables/xdialog2
ROOTPASSWDMSG=`echo $ROOTPASSWDMSG1 $ROOTPASSWDMSG3`
getrootsmbpasswd
SAMBAROOTPASSWORD1=`echo $SAMBAROOTPASSWORD`
#check samba root password
ROOTPASSWDMSG=`echo $ROOTPASSWDMSG2`
getrootsmbpasswd
SAMBAROOTPASSWORD2=`echo $SAMBAROOTPASSWORD`
while [ $SAMBAROOTPASSWORD1 != $SAMBAROOTPASSWORD2 ]
do
#get samba root password
ROOTPASSWDMSG=`echo $ERRORMSG3 $ROOTPASSWDMSG1`
getrootsmbpasswd
SAMBAROOTPASSWORD1=`echo $SAMBAROOTPASSWORD`
#check samba root password
ROOTPASSWDMSG=`echo $ROOTPASSWDMSG2`
getrootsmbpasswd
SAMBAROOTPASSWORD2=`echo $SAMBAROOTPASSWORD`
done
source /opt/karoshi/serversetup/variables/xdialog

#######################
#Change passwords
#######################
echo root:$SAMBAROOTPASSWORD | chpasswd
echo karoshi:$SAMBAROOTPASSWORD | chpasswd

#######################
#Store and encrypt password "for" later use
#######################
grep -w root /etc/shadow | cut -d: -f2 | gpg --no-tty --passphrase-fd 0 -c /opt/karoshi/.tempdata/sambapassword
rm -f /opt/karoshi/.tempdata/sambapassword
mv -f /opt/karoshi/.tempdata/sambapassword.gpg /opt/karoshi/serversetup/variables/initial_password.gpg
chmod 0600 /opt/karoshi/serversetup/variables/initial_password.gpg

#######################
#Stop password aging
#######################
chage -M 99999 root
chage -M 99999 karoshi

#######################
#Setup Scheduled Jobs
#######################
[ -d /opt/karoshi/cronjobs/jobs ] || mkdir -p /opt/karoshi/cronjobs/jobs
echo 0 0 '*' '*' 7 /opt/karoshi/'"'useful scripts'"'/resetguestaccounts > /opt/karoshi/cronjobs/jobs/resetguestaccounts.cron
echo 1 0 '*' '*' 1-5 /opt/karoshi/'"'useful scripts'"'/resettechaccounts > /opt/karoshi/cronjobs/jobs/resettechaccounts.cron
echo 20 0 '*' '*' 1-5 rm -d -R -f /home/temparea/'*' > /opt/karoshi/cronjobs/jobs/tidytemparea.cron
echo 30 0 '*' '*' 1-5 rm -d -R -f /home/staffshare/temp/'*' > /opt/karoshi/cronjobs/jobs/tidystafftemparea.cron
echo 40 0 '*' '*' 1-5 rm -d -R -f /home/officeshare/temp/'*' > /opt/karoshi/cronjobs/jobs/tidyofficetemp.cron
/opt/karoshi/serversetup/all/"useful scripts"/refreshcronjobs


#########################
#Linux Client support
#########################
[ ! -d /var/lib/samba/netlogon/linuxclient ] && mkdir -p /var/lib/samba/netlogon/linuxclient
cp -f -R /opt/karoshi/serversetup/pdc/linuxclient/ubuntu /var/lib/samba/netlogon/linuxclient/

cat /opt/karoshi/serversetup/pdc/linuxclient/pam_mount/pam_mount_header_xml > /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml
#Add in drive mount options

echo '<volume options="uid=%(USER),dmask=0700" user="*" mountpoint="~/network/subjects" path="subjects" server="'$HOSTNAME'.internal" fstype="smbfs" />' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml
echo '<volume options="uid=%(USER),dmask=0700" mountpoint="~/network/staffshare" path="staffshare" server="'$HOSTNAME'.internal" pgrp="itadmin" fstype="smbfs" />' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml
echo '<volume options="uid=%(USER),dmask=0700" mountpoint="~/network/staffshare" path="staffshare" server="'$HOSTNAME'.internal" pgrp="staff" fstype="smbfs" />' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml
echo '<volume options="uid=%(USER),dmask=0700" mountpoint="~/network/staffshare" path="staffshare" server="'$HOSTNAME'.internal" pgrp="officestaff" fstype="smbfs" />' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml
echo '<volume options="uid=%(USER),dmask=0700" mountpoint="~/network/itadmin" path="itadmin" server="'$HOSTNAME'.internal" pgrp="itadmin" fstype="smbfs" />' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml

for PRI_GROUPS in /opt/karoshi/server_network/group_information/*
do
PRI_GROUP=`basename $PRI_GROUPS`
source /opt/karoshi/server_network/group_information/$PRI_GROUP
echo '<volume options="uid=%(USER),dmask=0700" mountpoint="~/network/home" path="%(USER)" server="'$SERVER'.internal" pgrp="'$PRI_GROUP'" fstype="smbfs" />' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml
done
echo -e '\n</pam_mount>' >> /var/lib/samba/netlogon/linuxclient/pam_mount.conf.xml

cp -f /opt/karoshi/serversetup/all/backgrounds/linuxclient.png /var/lib/samba/netlogon/linuxclient/background.png

###########################
#Modify skel to match server settings
###########################
cd /var/lib/samba/netlogon/linuxclient/ubuntu
#Untar skel archive
tar -zxvf skel.tar.gz 1>/dev/null
rm -f /var/lib/samba/netlogon/linuxclient/ubuntu/skel.tar.gz
#Point change password icon to the pdc

LINE=`grep -n 'Exec=firefox https://' /var/lib/samba/netlogon/linuxclient/ubuntu/skel/Desktop/"Change Password.desktop" | cut -d: -f1`
sed -i $LINE'c''Exec=firefox https://'$HOSTNAME':50001/cgi-bin/all/change_my_password_fm.cgi' /var/lib/samba/netlogon/linuxclient/ubuntu/skel/Desktop/"Change Password.desktop"

#Find firefox prefs.js
PREFSJSPATH=`find /var/lib/samba/netlogon/linuxclient/ubuntu/skel/.mozilla/firefox -name 'prefs.js'`
#######################
#Modify prefs.js with correct proxy information
#######################
if [ ! -f /opt/karoshi/server_network/proxyserver ]
then
#Turn off proxy if no proxy has been setup
sed -i 's/user_pref("network.proxy.type", 1);/user_pref("network.proxy.type", 0);/g' $PREFSJSPATH
else
PROXYSERVER=`sed -n 1,1p /opt/karoshi/server_network/proxyserver`
#Set http proxy settings
if [ `grep -c 'user_pref("network.proxy.http",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("network.proxy.http",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("network.proxy.http", "'$PROXYSERVER'.internal");' $PREFSJSPATH
else
echo 'user_pref("network.proxy.http", "'$PROXYSERVER'.internal");' >> $PREFSJSPATH
fi
#Set ftp proxy settings
if [ `grep -c 'user_pref("network.proxy.ftp",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("network.proxy.ftp",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("network.proxy.ftp", "'$PROXYSERVER'.internal");' $PREFSJSPATH
else
echo 'user_pref("network.proxy.ftp", "'$PROXYSERVER'.internal");' >> $PREFSJSPATH
fi
#Set gopher proxy settings
if [ `grep -c 'user_pref("network.proxy.gopher",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("network.proxy.gopher",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("network.proxy.gopher", "'$PROXYSERVER'.internal");' $PREFSJSPATH
else
echo 'user_pref("network.proxy.gopher", "'$PROXYSERVER'.internal");' >> $PREFSJSPATH
fi
#Set socks proxy settings
if [ `grep -c 'user_pref("network.proxy.socks",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("network.proxy.socks",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("network.proxy.socks", "'$PROXYSERVER'.internal");' $PREFSJSPATH
else
echo 'user_pref("network.proxy.socks", "'$PROXYSERVER'.internal");' >> $PREFSJSPATH
fi
#Set ssl proxy settings
if [ `grep -c 'user_pref("network.proxy.ssl",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("network.proxy.ssl",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("network.proxy.ssl", "'$PROXYSERVER'.internal");' $PREFSJSPATH
else
echo 'user_pref("network.proxy.ssl", "'$PROXYSERVER'.internal");' >> $PREFSJSPATH
fi
#Set startpage settings
if [ `grep -c 'user_pref("browser.startup.homepage",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("browser.startup.homepage",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("browser.startup.homepage", "http://'$PROXYSERVER'.internal/index.html");' $PREFSJSPATH
else
echo 'user_pref("browser.startup.homepage", "http://'$PROXYSERVER'.internal/index.html");' >> $PREFSJSPATH
fi

if [ /opt/karoshi/server_network/moodleserver ]
then
MOODLESERVER=`sed -n 1,1p /opt/karoshi/server_network/moodleserver`
#Set clipboard setting for moodle
if [ `grep -c 'user_pref("capability.policy.allowclipboard.sites",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("capability.policy.allowclipboard.sites",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("capability.policy.allowclipboard.sites", "http://'$MOODLESERVER'.internal");' $PREFSJSPATH
else
echo 'user_pref("capability.policy.allowclipboard.sites", "http://'$MOODLESERVER'.internal");' >> $PREFSJSPATH
fi
fi

#Set no proxy settings
NOPROXYSERVERS=`ls /opt/karoshi/server_network/servers/`
NOPROXYSERVERS=`echo $NOPROXYSERVERS | sed 's/ /, /g'`
NOPROXYSERVERS2=`ls /opt/karoshi/server_network/servers/`
NOPROXYSERVERS2=`echo $NOPROXYSERVERS2 | sed 's/ /.internal, /g' | sed 's/$/.internal/g'`
NOPROXYSERVERS=`echo $NOPROXYSERVERS, $NOPROXYSERVERS2`

if [ `grep -c 'user_pref("network.proxy.no_proxies_on",' $PREFSJSPATH` -gt 0 ]
then
LINE=`grep -n 'user_pref("network.proxy.no_proxies_on",' $PREFSJSPATH | cut -d: -f1`
sed -i $LINE'c''user_pref("network.proxy.no_proxies_on", "localhost, 127.0.0.1, '"$NOPROXYSERVERS"'");' $PREFSJSPATH
else
echo 'user_pref("network.proxy.no_proxies_on", "localhost, 127.0.0.1, '"$NOPROXYSERVERS"'");' >> $PREFSJSPATH
fi
fi

#tar up skel archive
tar czf ../skel.tar.gz skel
mv -f /var/lib/samba/netlogon/linuxclient/skel.tar.gz /var/lib/samba/netlogon/linuxclient/ubuntu/
chmod 0444 /var/lib/samba/netlogon/linuxclient/ubuntu/skel.tar.gz

#Create client info on netlogon
[ ! -d /var/lib/samba/netlogon/domain_information ] && mkdir -p /var/lib/samba/netlogon/domain_information
echo $SAMBADOMAIN > /var/lib/samba/netlogon/domain_information/domain_name
echo $HOSTNAME > /var/lib/samba/netlogon/domain_information/main_server

#Copy printer info to netlogon
[ -f /opt/karoshi/server_network/printserver ] && cp -f /opt/karoshi/server_network/printserver /var/lib/samba/netlogon/

#Add ubuntu to versions.txt
touch /var/lib/samba/netlogon/linuxclient/versions.txt
[ `grep -c ^ubuntu /var/lib/samba/netlogon/linuxclient/versions.txt` = 0 ] && echo ubuntu >> /var/lib/samba/netlogon/linuxclient/versions.txt

#######################
#start xinetd
#######################
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/xinetd_stop
/opt/karoshi/serversetup/distro/$DISTROCHOICE/scripts/control_services/xinetd_start
exit
