
Starting OCS Inventory NG Management server setup on 2010-08-07-12-37-47
from folder /opt/karoshi/serversetup/modules/ocsinventory/OCSNG_UNIX_SERVER-1.3.2
Storing log in file /opt/karoshi/serversetup/modules/ocsinventory/OCSNG_UNIX_SERVER-1.3.2/ocs_server_setup.log

============================================================
Checking OCS Inventory NG Management Server requirements...
============================================================
Checking for database server properties
MySQL client distribution version 5.1.
Computer seems to be running MySQL 4.1 or higher
Database server is running on host localhost
Database server is running on port 3306
Checking for Apache web server daemon
Found Apache daemon /usr/sbin/apache2
Using Apache daemon /usr/sbin/apache2
Checking for Apache main configuration file
Found Apache HTTPD_ROOT 
Found Apache SERVER_CONFIG_FILE /etc/apache2/apache2.conf
Found Apache main configuration file /etc/apache2/apache2.conf
Using Apache main configuration file /etc/apache2/apache2.conf
Checking for Apache user account
Found Apache user account www-data
Using Apache user account www-data
Checking for Apache group
Found Apache user group www-data
Using Apache user group www-data
Checking for Apache Include configuration directory
Redhat compliant Apache Include configuration directory /etc/apache2/conf.d/
Found Apache Include configuration directory //etc/apache2/conf.d/
Using Apache Include configuration directory //etc/apache2/conf.d/
Checking for PERL Interpreter
Found PERL Intrepreter at </usr/bin/perl>
Using PERL Intrepreter /usr/bin/perl

============================================================
Installing Communication server
============================================================
Checking for Make utility
Make utility found at </usr/bin/make>
Checking for Apache mod_perl version 1.99_22 or higher
mod_perl 1.99_22 or higher is available
Using mod_perl version 1.99_22 or higher
Checking for Communication server log directory
Using /var/log/ocsinventory-server as Communication server log directory
Entering Apache sub directory
Checking for DBI PERL module
PERL module DBI is available
Checking for Apache::DBI PERL module
PERL module Apache::DBI is available
Checking for DBD::mysql PERL module
PERL module DBD::mysql is available
Checking for Compress::Zlib PERL module
PERL module Compress::Zlib is available
Checking for XML::Simple PERL module
PERL module XML::Simple is available
Checking for Net::IP PERL module
PERL module Net::IP is available
Checking for SOAP::Lite PERL module
PERL module SOAP::Lite is available
Checking for XML::Entities PERL module
Can't locate XML/Entities.pm in @INC (@INC contains: /etc/perl /usr/local/lib/perl/5.10.1 /usr/local/share/perl/5.10.1 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .).
BEGIN failed--compilation aborted.
User choose to continue setup without PERL module XML::Entities
Configuring Communication server (perl Makefile.PL)
Preparing Communication server Perl modules (make)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Cache.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Modperl2.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Capacities.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Map.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Extensions.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Export.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Communication.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/System.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Update.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Notify.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Updates.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Database.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Ipdiscover.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Config.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/SOAP.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/History.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Download/Inventory.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Registry.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Update/Hardware.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Update.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Ipdiscover.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Filter.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Data.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Filter.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Example.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Inventory.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Capacities/Download.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Inventory/Update/AccountInfos.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Constants.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/System/Config.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Modperl1.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Duplicate.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface/Internals.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Interface.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Groups.pm (unchanged)
Skip blib/lib/Apache/Ocsinventory/Server/Communication/Session.pm (unchanged)
Installing Communication server Perl modules (make install)
Appending installation info to /usr/local/lib/perl/5.10.1/perllocal.pod
Creating Communication server log directory /var/log/ocsinventory-server
Fixing Communication server log directory permissions
Configuring logrotate (ed logrotate.ocsinventory-NG)
******** Begin updated logrotate.ocsinventory-server.local ***********
# Rotate OCS Inventory NG Communication server logs daily
# Save 7 days old logs in compressed mode
/var/log/ocsinventory-server/*.log {
	daily
	rotate 7
	compress
	missingok
}
******** End updated logrotate.COM_SERVER_LOGROTATE_CONF_FILE.local ***********
Removing old communication server logrotate file /etc/logrotate.d/ocsinventory-NG
Writing communication server logrotate to file /etc/logrotate.d/ocsinventory-server
OK, using 'z-ocsinventory-server.conf' as Communication Server Apache configuration file
Configuring Apache web server (file ocsinventory-server.conf)
******** Begin updated ocsinventory-server.conf.local ***********
################################################################################
#
# OCS Inventory NG Communication Server Perl Module Setup
#
# Copyleft 2006 Pascal DANEK
# Web: http://www.ocsinventory-ng.org
#
# This code is open source and may be copied and modified as long as the source
# code is always made freely available.
# Please refer to the General Public Licence http://www.gnu.org/ or Licence.txt
################################################################################

<IfModule mod_perl.c>
 
  # Which version of mod_perl we are using
  # For mod_perl <= 1.999_21, replace 2 by 1
  # For mod_perl > 1.999_21, replace 2 by 2
  PerlSetEnv OCS_MODPERL_VERSION 2

  # Master Database settings
  # Replace localhost by hostname or ip of MySQL server for WRITE
  PerlSetEnv OCS_DB_HOST localhost
  # Replace 3306 by port where running MySQL server, generally 3306
  PerlSetEnv OCS_DB_PORT 3306
  # Name of database
  PerlSetEnv OCS_DB_NAME ocsweb
  PerlSetEnv OCS_DB_LOCAL ocsweb
  # User allowed to connect to database
  PerlSetEnv OCS_DB_USER ocs
  # Password for user
  PerlSetVar OCS_DB_PWD ocs

  #Â Slave Database settings
  # Replace localhost by hostname or ip of MySQL server for READ
  # Useful if you handle mysql slave databases
  # PerlSetEnv OCS_DB_SL_HOST localhost
  # Replace 3306 by port where running MySQL server, generally 3306
  # PerlSetEnv OCS_DB_SL_PORT_SLAVE 3306
  # User allowed to connect to database
  # PerlSetEnv OCS_DB_SL_USER ocs
  # Name of the database
  # PerlSetEnv OCS_DB_SL_NAME ocsweb
  # Password for user
  # PerlSetVar OCS_DB_SL_PWD ocs
  
  # Path to log directory (must be writeable)
  PerlSetEnv OCS_OPT_LOGPATH "/var/log/ocsinventory-server"
  
  # If you need to specify a mysql socket that the client's built-in
  #PerlSetVar OCS_OPT_DBI_MYSQL_SOCKET "path/to/mysql/unix/socket"
  # DBI verbosity
  PerlSetEnv OCS_OPT_DBI_PRINT_ERROR 0
  
  # Unicode support
  PerlSetEnv OCS_OPT_UNICODE_SUPPORT 1

  # If you are using a multi server architecture, 
  # Put the ip addresses of the slaves on the master
  # (This is read as perl regular expressions)
  PerlAddVar OCS_OPT_TRUSTED_IP 127.0.0.1
  #PerlAddVar OCS_OPT_TRUSTED_IP XXX.XXX.XXX.XXX
  
# ===== WEB SERVICE (SOAP) SETTINGS =====

  PerlSetEnv OCS_OPT_WEB_SERVICE_ENABLED 0
  PerlSetEnv OCS_OPT_WEB_SERVICE_RESULTS_LIMIT 100
  # PerlSetEnv OCS_OPT_WEB_SERVICE_PRIV_MODS_CONF "WEBSERV_PRIV_MOD_CONF_FILE"

# Be careful: you must restart apache to make settings taking effects

  # Configure engine to use the settings from this file  
  PerlSetEnv OCS_OPT_OPTIONS_NOT_OVERLOADED 0

  # Try to use other compress algorythm than raw zlib
  # GUNZIP and clear XML are supported
  PerlSetEnv OCS_OPT_COMPRESS_TRY_OTHERS 1
  
##############################################################
# ===== OPTIONS BELOW ARE OVERLOADED IF YOU USE OCS GUI =====#
##############################################################

# NOTE: IF YOU WANT TO USE THIS CONFIG FILE INSTEAD, set OCS_OPT_OPTIONS_NOT_OVERLOADED to '1'

# ===== MAIN SETTINGS =====

  # Enable engine logs (see LOGPATH setting)
  PerlSetEnv OCS_OPT_LOGLEVEL 0
  # Specify agent's prolog frequency
  PerlSetEnv OCS_OPT_PROLOG_FREQ 12
  # Configure the duplicates detection system
  PerlSetEnv OCS_OPT_AUTO_DUPLICATE_LVL 15
  # Futur security improvements
  PerlSetEnv OCS_OPT_SECURITY_LEVEL 0
  # Validity of a computer's lock
  PerlSetEnv OCS_OPT_LOCK_REUSE_TIME 600
  # Enable the history tracking system (useful for external data synchronisation
  PerlSetEnv OCS_OPT_TRACE_DELETED 0
  
# ===== INVENTORY SETTINGS =====
  
  # Specify the validity of inventory data
  PerlSetEnv OCS_OPT_FREQUENCY 0  
  # Configure engine to update inventory regarding to CHECKSUM agent value (lower DB backend load)
  PerlSetEnv OCS_OPT_INVENTORY_DIFF 1
  # Make engine consider an inventory as a transaction (lower concurency, better disk usage)
  PerlSetEnv OCS_OPT_INVENTORY_TRANSACTION 1
  # Configure engine to make a differential update of inventory sections (row level). Lower DB backend load, higher frontend load
  PerlSetEnv OCS_OPT_INVENTORY_WRITE_DIFF 1
  # Enable some stuff to improve DB queries, especially for GUI multicriteria searching system
  PerlSetEnv OCS_OPT_INVENTORY_CACHE_ENABLED 1
  # Specify when the engine will clean the inventory cache structures
  PerlSetEnv OCS_OPT_INVENTORY_CACHE_REVALIDATE 7
  # Enable you to keep trace of every elements encountered in db life
  PerlSetEnv OCS_OPT_INVENTORY_CACHE_KEEP 1

# ===== SOFTWARES DEPLOYMENT SETTINGS =====

  # Enable this feature
  PerlSetEnv OCS_OPT_DOWNLOAD 0
  # Package wich have a priority superior than this value will not be downloaded
  PerlSetEnv OCS_OPT_DOWNLOAD_PERIOD_LENGTH 10
  # Time between two download cycles (bandwidth control)
  PerlSetEnv OCS_OPT_DOWNLOAD_CYCLE_LATENCY 60
  # Time between two fragment downloads (bandwidth control)
  PerlSetEnv OCS_OPT_DOWNLOAD_FRAG_LATENCY 60
  # Specify if you want to track packages affected to a group on computer's level
  PerlSetEnv OCS_OPT_DOWNLOAD_GROUPS_TRACE_EVENTS 1
  # Time between two download periods (bandwidth control)
  PerlSetEnv OCS_OPT_DOWNLOAD_PERIOD_LATENCY 60
  # Agents will send ERR_TIMEOUT event and clean the package it is older than this setting
  PerlSetEnv OCS_OPT_DOWNLOAD_TIMEOUT 7
  # Number of cycle within a period
  
  # Enable ocs engine to deliver agent's files (deprecated)
  PerlSetEnv OCS_OPT_DEPLOY 0
  # Enable the softwares deployment capacity (bandwidth control)
  
# ===== GROUPS SETTINGS =====

  # Enable the computer\s groups feature
  PerlSetEnv OCS_OPT_ENABLE_GROUPS 1
  # Random number computed in the defined range. Designed to avoid computing many groups in the same process
  PerlSetEnv OCS_OPT_GROUPS_CACHE_OFFSET 600
  # Specify the validity of computer's groups (default: 10 minutes - see offset)
  PerlSetEnv OCS_OPT_GROUPS_CACHE_REVALIDATE 600
  
# ===== IPDISCOVER SETTINGS =====

  # Specify how much agent per LAN will discovered connected peripherals (0 to disable)
  PerlSetEnv OCS_OPT_IPDISCOVER 2
  # Specify the minimal difference to replace an ipdiscover agent
  PerlSetEnv OCS_OPT_IPDISCOVER_BETTER_THRESHOLD 1
  # Time between 2 arp requests (mini: 10 ms)
  PerlSetEnv OCS_OPT_IPDISCOVER_LATENCY 100
  # Specify when to remove a computer when it has not come until this period
  PerlSetEnv OCS_OPT_IPDISCOVER_MAX_ALIVE 14
  # Disable the time before a first election (not recommended)
  PerlSetEnv OCS_OPT_IPDISCOVER_NO_POSTPONE 0
  # Enable groups for ipdiscover (for example, you might want to prevent some groups to be ipdiscover agents)
  PerlSetEnv OCS_OPT_IPDISCOVER_USE_GROUPS 1
  
# ===== INVENTORY FILES MAPPING SETTINGS =====

  # Use with ocsinventory-injector, enable the multi entities feature
  PerlSetEnv OCS_OPT_GENERATE_OCS_FILES 0
  # Generate either compressed file or clear XML text
  PerlSetEnv OCS_OPT_OCS_FILES_FORMAT OCS
  # Specify if you want to keep trace of all inventory between to synchronisation with the higher level server
  PerlSetEnv OCS_OPT_OCS_FILES_OVERWRITE 0
  # Path to ocs files directory (must be writeable)
  PerlSetEnv OCS_OPT_OCS_FILES_PATH /tmp

# ===== FILTER SETTINGS =====

  # Enable prolog filter stack
  PerlSetEnv OCS_OPT_PROLOG_FILTER_ON 0
  # Enable core filter system to modify some things "on the fly"
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_ENABLED 0
  # Enable inventory flooding filter. A dedicated ipaddress ia allowed to send a new computer only once in this period
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_FLOOD_IP 0
  # Period definition for INVENTORY_FILTER_FLOOD_IP
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_FLOOD_IP_CACHE_TIME 300
  # Enable inventory filter stack
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_ON 0
  
# ===== REGISTRY SETTINGS =====

  # Enable the registry capacity
  PerlSetEnv OCS_OPT_REGISTRY 1
  
# ===== SESSION SETTINGS =====
# Not yet in GUI

  # Validity of a session (prolog=>postinventory)
  PerlSetEnv OCS_OPT_SESSION_VALIDITY_TIME 600
  # Consider a session obsolete if it is older thant this value
  PerlSetEnv OCS_OPT_SESSION_CLEAN_TIME 86400
  # Accept an inventory only if required by server
  #( Refuse "forced" inventory)
  PerlSetEnv OCS_OPT_INVENTORY_SESSION_ONLY 0

# ===== TAG =====

  # The default behavior of the server is to ignore TAG changes from the
  # agent.
  PerlSetEnv OCS_OPT_ACCEPT_TAG_UPDATE_FROM_CLIENT 0


# ===== DEPRECATED =====

  # Set the proxy cache validity in http headers when sending a file
  PerlSetEnv OCS_OPT_PROXY_REVALIDATE_DELAY 3600
  # Deprecated
  PerlSetEnv OCS_OPT_UPDATE 0
  
############ DO NOT MODIFY BELOW ! #######################
  
  # External modules
  PerlModule Apache::DBI
  PerlModule Compress::Zlib
  PerlModule XML::Simple
  
  # Ocs
  PerlModule Apache::Ocsinventory
  PerlModule Apache::Ocsinventory::Server::Constants
  PerlModule Apache::Ocsinventory::Server::System
  PerlModule Apache::Ocsinventory::Server::Communication
  PerlModule Apache::Ocsinventory::Server::Inventory
  PerlModule Apache::Ocsinventory::Server::Duplicate

  # Capacities
  PerlModule Apache::Ocsinventory::Server::Capacities::Registry
  PerlModule Apache::Ocsinventory::Server::Capacities::Update
  PerlModule Apache::Ocsinventory::Server::Capacities::Ipdiscover
  PerlModule Apache::Ocsinventory::Server::Capacities::Download
  PerlModule Apache::Ocsinventory::Server::Capacities::Notify
  # This module guides you through the module creation
  # PerlModule Apache::Ocsinventory::Server::Capacities::Example
  # This module adds some rules to filter some request sent to ocs server in the prolog and inventory stages
  # PerlModule Apache::Ocsinventory::Server::Capacities::Filter
  
  # PerlTaintCheck On

  # SSL apache settings 
  #SSLEngine "SSL_ENABLE"
  #SSLCertificateFile "SSL_CERTIFICATE_FILE"
  #SSLCertificateKeyFile "SSL_CERTIFICATE_KEY_FILE"
  #SSLCACertificateFile "SSL_CERTIFICATE_FILE"
  #SSLCACertificatePath "SSL_CERTIFICATE_PATH"
  #SSLVerifyClient "SSL_VALIDATE_CLIENT"

  # Engine apache settings
  # "Virtual" directory for handling OCS Inventory NG agents communications
  # Be careful, do not create such directory into your web server root document !
  <Location /ocsinventory>
	order deny,allow
	allow from all
	Satisfy Any
	#Â If you protect this area you have to deal with http_auth_* agent's parameters
	# AuthType Basic
	# AuthName "OCS Inventory agent area"
	# AuthUserFile "APACHE_AUTH_USER_FILE"
	# require valid-user
        SetHandler perl-script
        PerlHandler Apache::Ocsinventory
  </Location>

  # Web service apache settings
  PerlModule Apache::Ocsinventory::SOAP

  <location /ocsinterface>
        SetHandler perl-script
        PerlHandler "Apache::Ocsinventory::SOAP"
        
        # By default, you can query web service from everywhere with a valid user
        Order deny,allow
        Allow from all
       	AuthType Basic
	AuthName "OCS Inventory SOAP Area"
	# Use htpasswd to create/update soap-user (or another granted user)
	AuthUserFile "APACHE_AUTH_USER_FILE"
	require "SOAP_USER"
  </location>
</IfModule>

******** End updated ocsinventory-server.conf.local ***********
Removing old communication server configuration to file //etc/apache2/conf.d//ocsinventory.conf
Writing communication server configuration to file //etc/apache2/conf.d//z-ocsinventory-server.conf
Leaving Apache directory
Communication server installation successfull

============================================================
Installing Administration server
============================================================
Checking for Administration Server directories...
Using directory /usr/share/ocsinventory-reports for static files
Using /var/lib/ocsinventory-reports as writable/cache directory
Checking for DBI PERL module
PERL module DBI is available
Checking for DBD::mysql PERL module
PERL module DBD::mysql is available
Checking for XML::Simple PERL module
PERL module XML::Simple is available
Checking for Net::IP PERL module
PERL module Net::IP is available
Creating PHP directory /usr/share/ocsinventory-reports/ocsreports
Copying PHP files to /usr/share/ocsinventory-reports/ocsreports
Fixing permissions on directory /usr/share/ocsinventory-reports/ocsreports
Creating database configuration file /usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php
Creating IPDiscover directory /var/lib/ocsinventory-reports/ipd
Fixing permissions on directory /var/lib/ocsinventory-reports/ipd
Creating packages directory /var/lib/ocsinventory-reports/download
Fixing permissions on directory /var/lib/ocsinventory-reports/download
Configuring IPDISCOVER-UTIL Perl script (ed ipdiscover-util.pl)
Installing IPDISCOVER-UTIL Perl script
Fixing permissions on IPDISCOVER-UTIL Perl script
Configuring Apache web server (file ocsinventory-reports.conf)
******** Begin updated ocsinventory-reports.conf.local ***********
################################################################################
#
# OCS Inventory NG Administration Server
#
# Copyleft 2008 OCS Inventory NG Team
# Web: http://www.ocsinventory-ng.org
#
# This code is open source and may be copied and modified as long as the source
# code is always made freely available.
# Please refer to the General Public Licence http://www.gnu.org/ or Licence.txt
################################################################################

#
# ANY CHANGE ON THIS FILE REQUIRES APACHE RESTART TO TAKE EFFECT
#

################################################################################
# Administration console public pages
# 
# Alias used to put Administration Server static page (typically PHP) outside
# Apache document root directory
#
Alias /ocsreports /usr/share/ocsinventory-reports/ocsreports

<Directory /usr/share/ocsinventory-reports/ocsreports>
    # By default, users can use console from everywhere
    Order deny,allow
    Allow from all
    Options Indexes FollowSymLinks
    DirectoryIndex index.php
    AllowOverride Options
    
    # Uncomment following to force use of HTTPS in Administration Server
    #SSLRequireSSL
    
    # PHP tuning (not working on all distribution, use php.ini instead)
    AddType application/x-httpd-php .php
    php_flag file_uploads           on
    # Some PHP tuning for deployement feature up to 8 MB
    # post_max_size must be greater than upload_max_filesize
    # because of HTTP headers 
    php_value post_max_size         9m
    php_value upload_max_filesize   8m
    # You may have to uncomment following on errors
    #php_value max_execution_time -1
    #php_value max_input_time -1
 
    # Uncomment following to allow HTTP body request up to 4 MB
    # instead default 512 KB
    #LimitRequestBody 4194304
</Directory>

################################################################################
# Deployment packages download area
# 
# Alias to put Deployement package files outside Apache document root directory
#
Alias /download /var/lib/ocsinventory-reports/download
******** End updated ocsinventory-reports.conf.local ***********
Writing communication server configuration to file //etc/apache2/conf.d//ocsinventory-reports.conf
Administration server installation successfull
