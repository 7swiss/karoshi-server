#!/bin/bash
#Copyright (C) 2008 Paul Sharrad
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#The Karoshi Team can be contacted at: 
#mpsharrad@karoshi.org.uk
#jharris@karoshi.org.uk
#aball@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk

#Exit if internet_log_gen is already running
LOG_GEN_COUNT=`ps -e | grep -c internet_log_ge`
if [ $LOG_GEN_COUNT -gt 2 ]
then
echo Too many internet_log_processes
exit
fi

CHUNKSIZE=199
SLEEPTIME=5 #Time in seconds between each log generation cycle 180
CYCLECOUNT=1
MAXCYCLECOUNT=100 # Number of cycles to run before this script exits. Restarted by cron.
LOGPATH=/var/log/dansguardian/access.log
LOGFILEDIR=/opt/karoshi/logs/internetlogs/
TODAY=`date +%d-%m-%Y`

function makefolders {
TODAYSLOGFOLDER=$LOGFILEDIR`date +%d-%m-%Y`
[ $TODAYSLOGFOLDER'null' = null ] && exit
if [ ! -f $LOGPATH ]
then
echo No internet log exits
exit
fi
#Make karoshi log folder
if [ ! -d $LOGFILEDIR ]
then
mkdir -p $LOGFILEDIR
chmod 0700 $LOGFILEDIR
fi
############################
#Make folder for internet logs
############################
if [ ! -d $TODAYSLOGFOLDER ]
then
mkdir -p $TODAYSLOGFOLDER
chmod 0700 $TODAYSLOGFOLDER
mkdir $TODAYSLOGFOLDER/users
chmod 0700 $TODAYSLOGFOLDER/users
mkdir $TODAYSLOGFOLDER/machines
chmod 0700 $TODAYSLOGFOLDER/machines
mkdir $TODAYSLOGFOLDER/sites
chmod 0700 $TODAYSLOGFOLDER/sites
mkdir $TODAYSLOGFOLDER/sites/allowed
chmod 0700 $TODAYSLOGFOLDER/sites/allowed
mkdir $TODAYSLOGFOLDER/sites/denied
chmod 0700 $TODAYSLOGFOLDER/sites/denied
fi
}

function get_log_length {
#Get log length
COUNTER=1
LOGLENGTH=`cat $LOGPATH | wc -l`
#LOGLENGTH=2
if [ -f $TODAYSLOGFOLDER/startline ]
then
source $TODAYSLOGFOLDER/startline
[ $COUNTER'null' = null ] && COUNTER=1
fi
}

function sort_arrays {
ARRAY_COUNTER=0
DATA_COUNT=`echo ${#WEB_ARRAY[@]}`
while [ $ARRAY_COUNTER -lt $DATA_COUNT ]
do
USERNAME=${USERNAME_ARRAY[$ARRAY_COUNTER]}
USERTCPIP=${TCPIP_ARRAY[$ARRAY_COUNTER]}
WEBSITE=`echo ${WEB_ARRAY[$ARRAY_COUNTER]} | cut -d'/' -f 3 | tr -cd 'A-Za-z 0-9\-._:\n' | sed 's/^www\.//g' | sed 's/^www.\.//g'`www
echo ${TIME_ARRAY[$ARRAY_COUNTER]} ${TCPIP_ARRAY[$ARRAY_COUNTER]} ${HIT_ARRAY[$ARRAY_COUNTER]} ${WEB_ARRAY[$ARRAY_COUNTER]} ${USERNAME_ARRAY[$ARRAY_COUNTER]} >> $TODAYSLOGFOLDER/users/"$USERNAME"
echo ${TIME_ARRAY[$ARRAY_COUNTER]} ${TCPIP_ARRAY[$ARRAY_COUNTER]} ${HIT_ARRAY[$ARRAY_COUNTER]} ${WEB_ARRAY[$ARRAY_COUNTER]} ${USERNAME_ARRAY[$ARRAY_COUNTER]} >> $TODAYSLOGFOLDER/machines/"$USERTCPIP"
if [ `echo ${HIT_ARRAY[$ARRAY_COUNTER]} | grep -c DENIED` -gt 0 ]
then
echo ${TIME_ARRAY[$ARRAY_COUNTER]} ${TCPIP_ARRAY[$ARRAY_COUNTER]} ${HIT_ARRAY[$ARRAY_COUNTER]} ${WEB_ARRAY[$ARRAY_COUNTER]} ${USERNAME_ARRAY[$ARRAY_COUNTER]} >> $TODAYSLOGFOLDER/sites/denied/"$WEBSITE"
else
echo ${TIME_ARRAY[$ARRAY_COUNTER]} ${TCPIP_ARRAY[$ARRAY_COUNTER]} ${HIT_ARRAY[$ARRAY_COUNTER]} ${WEB_ARRAY[$ARRAY_COUNTER]} ${USERNAME_ARRAY[$ARRAY_COUNTER]} >> $TODAYSLOGFOLDER/sites/allowed/"$WEBSITE"
fi
let ARRAY_COUNTER=$ARRAY_COUNTER+1
done
}


function process_logs {
echo COUNTER is $COUNTER
while [ $COUNTER -lt $LOGLENGTH ]
do
#Assign data to arrays
STARTLINE=$COUNTER
let ENDLINE=$COUNTER+$CHUNKSIZE
echo Processing lines $STARTLINE to $ENDLINE of $LOGLENGTH at `date +%H-%M-%S`
TIME_ARRAY=( `sed -n $STARTLINE,$ENDLINE'p' $LOGPATH | cut -d' ' -f1` )
TCPIP_ARRAY=( `sed -n $STARTLINE,$ENDLINE'p' $LOGPATH | sed 's/ * / /g' | cut -d' ' -f3` )
HIT_ARRAY=( `sed -n $STARTLINE,$ENDLINE'p' $LOGPATH | sed 's/ * / /g' | cut -d' ' -f4` )
WEB_ARRAY=( `sed -n $STARTLINE,$ENDLINE'p' $LOGPATH | sed 's/ * / /g' | cut -d' ' -f7` )
USERNAME_ARRAY=( `sed -n $STARTLINE,$ENDLINE'p' $LOGPATH | sed 's/ * / /g' | cut -d' ' -f8` )
sort_arrays
let COUNTER=$COUNTER+$DATA_COUNT
echo COUNTER=$COUNTER > $TODAYSLOGFOLDER/startline
done

}

makefolders
while [ $CYCLECOUNT -lt $MAXCYCLECOUNT ]
do
get_log_length
process_logs
echo -e "\nsleeping for $SLEEPTIME seconds.\n"
sleep $SLEEPTIME
let CYCLECOUNT=$CYCLECOUNT+1
done
echo Max cycles reached. Exiting now...
exit


